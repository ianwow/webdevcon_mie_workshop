{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendKeyPhrases.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendKeyPhrases.vue","mtime":1623875433270},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/thread-loader/dist/cjs.js","mtime":1633407346686},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMb2FkaW5nIGZyb20gJ0AvY29tcG9uZW50cy9Mb2FkaW5nLnZ1ZScKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJLZXlQaHJhc2VzIiwKICBjb21wb25lbnRzOiB7CiAgICBMb2FkaW5nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgQ29uZmlkZW5jZTogOTAsCiAgICAgIHNvcnRCeTogIkJlZ2luT2Zmc2V0IiwKICAgICAgZmllbGRzOiBbCiAgICAgICAgeyBrZXk6ICdQaHJhc2VUZXh0Jywgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgICAgeyBrZXk6ICdDb25maWRlbmNlJywgc29ydGFibGU6IHRydWUgfSwKICAgICAgICB7IGtleTogJ0JlZ2luT2Zmc2V0Jywgc29ydGFibGU6IHRydWUgfSwKICAgICAgICB7IGtleTogJ0VuZE9mZnNldCcsIHNvcnRhYmxlOiB0cnVlIH0sCiAgICAgIF0sCiAgICAgIGtleV9waHJhc2VzOiBbXSwKICAgICAgaXNCdXN5OiBmYWxzZSwKICAgICAgb3BlcmF0b3I6ICJrZXlfcGhyYXNlcyIKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ3BsYXllciddKSwKICB9LAogIGRlYWN0aXZhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICBjb25zb2xlLmxvZygnZGVhY3RpdmF0ZWQgY29tcG9uZW50OicsIHRoaXMub3BlcmF0b3IpOwogICAgLy8gY2xlYXJpbmcgdGhpcyB2YWx1ZSBhZnRlciBldmVyeSBkZWFjdGl2YXRpb24gc28gd2UgZG9udCBjYXJyeSB0aGlzIGh1Z2UgYW1vdW50IG9mIGRhdGEgaW4gbWVtb3J5CiAgICB0aGlzLmtleV9waHJhc2VzID0gW10KICB9LAogIGFjdGl2YXRlZDogZnVuY3Rpb24gKCkgewogICAgY29uc29sZS5sb2coJ2FjdGl2YXRlZCBjb21wb25lbnQ6JywgdGhpcy5vcGVyYXRvcik7CiAgICB0aGlzLmZldGNoQXNzZXREYXRhKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLmtleV9waHJhc2VzID0gW10KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNvbmZpZGVuY2UgKGV2ZW50KSB7CiAgICAgICAgdGhpcy5pc0J1c3kgPSB0cnVlOwogICAgICAgIHRoaXMua2V5X3BocmFzZXMgPSBbXTsKICAgICAgICB0aGlzLkNvbmZpZGVuY2UgPSBldmVudC50YXJnZXQudmFsdWU7CiAgICAgICAgdGhpcy5mZXRjaEFzc2V0RGF0YSgpCiAgICB9LAogICAgYXN5bmMgZmV0Y2hBc3NldERhdGEgKCkgewogICAgICBsZXQgcXVlcnkgPSAnQXNzZXRJZDonK3RoaXMuJHJvdXRlLnBhcmFtcy5hc3NldF9pZCsnIENvbmZpZGVuY2U6PicrdGhpcy5Db25maWRlbmNlKycgX2luZGV4Om1pZWtleV9waHJhc2VzJzsKICAgICAgbGV0IGFwaU5hbWUgPSAnY29udGVudEFuYWx5c2lzRWxhc3RpY3NlYXJjaCc7CiAgICAgIGxldCBwYXRoID0gJy9fc2VhcmNoJzsKICAgICAgbGV0IGFwaVBhcmFtcyA9IHsKICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sCiAgICAgICAgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOiB7J3EnOiBxdWVyeSwgJ2RlZmF1bHRfb3BlcmF0b3InOiAnQU5EJywgJ3NpemUnOiAxMDAwMH0KICAgICAgfTsKICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kQW1wbGlmeS5BUEkuZ2V0KGFwaU5hbWUsIHBhdGgsIGFwaVBhcmFtcyk7CiAgICAgIGlmICghcmVzcG9uc2UpIHsKICAgICAgICB0aGlzLnNob3dFbGFzdGljU2VhcmNoQWxlcnQgPSB0cnVlCiAgICAgIH0KICAgICAgZWxzZSB7CiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlOwogICAgICAgIGxldCBkYXRhID0gcmVzdWx0LmhpdHMuaGl0czsKICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gZGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdGhpcy5rZXlfcGhyYXNlcy5wdXNoKHsgIlBocmFzZVRleHQiOiBkYXRhW2ldLl9zb3VyY2UuUGhyYXNlVGV4dCwgIkNvbmZpZGVuY2UiOiBkYXRhW2ldLl9zb3VyY2UuQ29uZmlkZW5jZSwgIkJlZ2luT2Zmc2V0IjogZGF0YVtpXS5fc291cmNlLkJlZ2luT2Zmc2V0LCAiRW5kT2Zmc2V0IjogZGF0YVtpXS5fc291cmNlLkVuZE9mZnNldH0pCiAgICAgICAgfQogICAgICAgIHRoaXMuaXNCdXN5ID0gZmFsc2UKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["ComprehendKeyPhrases.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ComprehendKeyPhrases.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\">\n      Confidence Threshold<br>\n      <input\n        type=\"range\"\n        value=\"90\"\n        min=\"55\"\n        max=\"99\"\n        step=\"1\"\n        @click=\"updateConfidence\"\n      >\n      {{ Confidence }}%<br>\n    </div>\n    <div\n      v-if=\"isBusy\"\n      class=\"wrapper\"\n    >\n      <Loading />\n    </div>\n    <div\n      v-else\n      class=\"wrapper\"\n    >\n      <b-table\n        responsive\n        fixed\n        :items=\"key_phrases\"\n        :fields=\"fields\"\n        :sort-by=\"sortBy\"\n      >\n        <template #cell(Confidence)=\"data\">\n          {{ (data.item.Confidence * 1).toFixed(2) }}\n        </template>\n      </b-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Loading from '@/components/Loading.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: \"KeyPhrases\",\n  components: {\n    Loading\n  },\n  data() {\n    return {\n      Confidence: 90,\n      sortBy: \"BeginOffset\",\n      fields: [\n        { key: 'PhraseText', sortable: false },\n        { key: 'Confidence', sortable: true },\n        { key: 'BeginOffset', sortable: true },\n        { key: 'EndOffset', sortable: true },\n      ],\n      key_phrases: [],\n      isBusy: false,\n      operator: \"key_phrases\"\n    }\n  },\n  computed: {\n    ...mapState(['player']),\n  },\n  deactivated: function () {\n    console.log('deactivated component:', this.operator);\n    // clearing this value after every deactivation so we dont carry this huge amount of data in memory\n    this.key_phrases = []\n  },\n  activated: function () {\n    console.log('activated component:', this.operator);\n    this.fetchAssetData();\n  },\n  beforeDestroy: function () {\n    this.key_phrases = []\n  },\n  methods: {\n    updateConfidence (event) {\n        this.isBusy = true;\n        this.key_phrases = [];\n        this.Confidence = event.target.value;\n        this.fetchAssetData()\n    },\n    async fetchAssetData () {\n      let query = 'AssetId:'+this.$route.params.asset_id+' Confidence:>'+this.Confidence+' _index:miekey_phrases';\n      let apiName = 'contentAnalysisElasticsearch';\n      let path = '/_search';\n      let apiParams = {\n        headers: {'Content-Type': 'application/json'},\n        queryStringParameters: {'q': query, 'default_operator': 'AND', 'size': 10000}\n      };\n      let response = await this.$Amplify.API.get(apiName, path, apiParams);\n      if (!response) {\n        this.showElasticSearchAlert = true\n      }\n      else {\n        let result = await response;\n        let data = result.hits.hits;\n        for (let i = 0, len = data.length; i < len; i++) {\n          this.key_phrases.push({ \"PhraseText\": data[i]._source.PhraseText, \"Confidence\": data[i]._source.Confidence, \"BeginOffset\": data[i]._source.BeginOffset, \"EndOffset\": data[i]._source.EndOffset})\n        }\n        this.isBusy = false\n      }\n    }\n  }\n}\n</script>\n"]}]}