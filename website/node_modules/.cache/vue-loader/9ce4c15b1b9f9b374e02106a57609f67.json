{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/MediaSummaryBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/MediaSummaryBox.vue","mtime":1642006298138},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWVkaWFTdW1tYXJ5JywKICBwcm9wczogWydzM1VyaScsJ2ZpbGVuYW1lJywndmlkZW9VcmwnLCAnbWVkaWFUeXBlJ10sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBkdXJhdGlvbjogInVuZGVmaW5lZCIsCiAgICAgIGVsYXN0aWNzZWFyY2hfZGF0YTogW10sCiAgICAgIG1lZGlhaW5mb19kYXRhOiBbXSwKICAgICAgZm9ybWF0OiAidW5kZWZpbmVkIiwKICAgICAgZmlsZV9zaXplOiAidW5kZWZpbmVkIiwKICAgICAgb3ZlcmFsbF9iaXRfcmF0ZTogInVuZGVmaW5lZCIsCiAgICAgIGZyYW1lX3JhdGU6ICJ1bmRlZmluZWQiLAogICAgICB3aWR0aDogInVuZGVmaW5lZCIsCiAgICAgIGhlaWdodDogInVuZGVmaW5lZCIsCiAgICAgIG90aGVyX2JpdF9yYXRlOiAidW5kZWZpbmVkIiwKICAgICAgb3RoZXJfc2FtcGxpbmdfcmF0ZTogInVuZGVmaW5lZCIsCiAgICAgIG90aGVyX2xhbmd1YWdlOiAidW5kZWZpbmVkIiwKICAgICAgZW5jb2RlZF9kYXRlOiAidW5kZWZpbmVkIiwKICAgICAgaXNCdXN5OiBmYWxzZSwKICAgIH0KICB9LAogIGRlYWN0aXZhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLmxpbmVDaGFydCA9IE9iamVjdAogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdGhpcy5mZXRjaEFzc2V0RGF0YSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gKCkgewogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZmV0Y2hBc3NldERhdGEgKCkgewogICAgICB0aGlzLmlzQnVzeSA9IHRydWU7CiAgICAgIGxldCBxdWVyeSA9ICdBc3NldElkOicrdGhpcy4kcm91dGUucGFyYW1zLmFzc2V0X2lkKycgT3BlcmF0b3I6bWVkaWFpbmZvJzsKICAgICAgbGV0IGFwaU5hbWUgPSAnY29udGVudEFuYWx5c2lzRWxhc3RpY3NlYXJjaCc7CiAgICAgIGxldCBwYXRoID0gJy9fc2VhcmNoJzsKICAgICAgbGV0IGFwaVBhcmFtcyA9IHsKICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sCiAgICAgICAgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOiB7J3EnOiBxdWVyeSwgJ2RlZmF1bHRfb3BlcmF0b3InOiAnQU5EJywgJ3NpemUnOiAxMDAwMH0KICAgICAgfTsKICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kQW1wbGlmeS5BUEkuZ2V0KGFwaU5hbWUsIHBhdGgsIGFwaVBhcmFtcyk7CiAgICAgIGlmICghcmVzcG9uc2UpIHsKICAgICAgICB0aGlzLnNob3dFbGFzdGljU2VhcmNoQWxlcnQgPSB0cnVlCiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IGVzX2RhdGEgPSBbXTsKICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2U7CiAgICAgICAgbGV0IGRhdGEgPSByZXN1bHQuaGl0cy5oaXRzOwogICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBkYXRhLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICBlc19kYXRhLnB1c2goZGF0YVtpXS5fc291cmNlKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5lbGFzdGljc2VhcmNoX2RhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGVzX2RhdGEpKTsKICAgICAgICBsZXQgdHJhY2tfZGF0YSA9IHsiR2VuZXJhbCI6IHVuZGVmaW5lZCwgIlZpZGVvIjogdW5kZWZpbmVkLCAiQXVkaW8iOiB1bmRlZmluZWR9OwogICAgICAgIHRyYWNrX2RhdGFbIkdlbmVyYWwiXSA9IHRoaXMuZWxhc3RpY3NlYXJjaF9kYXRhLmZpbHRlcih4ID0+IHgudHJhY2tfdHlwZSA9PT0gIkdlbmVyYWwiKTsKICAgICAgICB0cmFja19kYXRhWyJWaWRlbyJdID0gdGhpcy5lbGFzdGljc2VhcmNoX2RhdGEuZmlsdGVyKHggPT4geC50cmFja190eXBlID09PSAiVmlkZW8iKTsKICAgICAgICB0cmFja19kYXRhWyJBdWRpbyJdID0gdGhpcy5lbGFzdGljc2VhcmNoX2RhdGEuZmlsdGVyKHggPT4geC50cmFja190eXBlID09PSAiQXVkaW8iKTsKICAgICAgICBpZiAodHJhY2tfZGF0YVsiR2VuZXJhbCJdWzBdICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGlmICgiZHVyYXRpb24iIGluIHRyYWNrX2RhdGFbIkdlbmVyYWwiXVswXSkgewogICAgICAgICAgICBsZXQgc2Vjb25kcyA9IHRyYWNrX2RhdGFbIkdlbmVyYWwiXVswXS5kdXJhdGlvbiAvIDEwMDA7CiAgICAgICAgICAgIGlmIChzZWNvbmRzID49IDM2MDApIHsKICAgICAgICAgICAgICB0aGlzLmR1cmF0aW9uID0gbmV3IERhdGUoc2Vjb25kcyAqIDEwMDApLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDExLCA4KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBkcm9wIGhvdXJzIHBvcnRpb24gaWYgdGltZSBpcyBsZXNzIHRoYW4gMSBob3VyCiAgICAgICAgICAgICAgdGhpcy5kdXJhdGlvbiA9IG5ldyBEYXRlKHNlY29uZHMgKiAxMDAwKS50b0lTT1N0cmluZygpLnN1YnN0cigxNCwgNSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmICgiZm9ybWF0IiBpbiB0cmFja19kYXRhWyJHZW5lcmFsIl1bMF0pIHsKICAgICAgICAgICAgdGhpcy5mb3JtYXQgPSB0cmFja19kYXRhWyJHZW5lcmFsIl1bMF0uZm9ybWF0OwogICAgICAgICAgfQogICAgICAgICAgaWYgKCJmaWxlX3NpemUiIGluIHRyYWNrX2RhdGFbIkdlbmVyYWwiXVswXSkgewogICAgICAgICAgICB0aGlzLmZpbGVfc2l6ZSA9ICh0cmFja19kYXRhWyJHZW5lcmFsIl1bMF0uZmlsZV9zaXplIC8gMTAwMCAvIDEwMDApLnRvRml4ZWQoMik7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoIm92ZXJhbGxfYml0X3JhdGUiIGluIHRyYWNrX2RhdGFbIkdlbmVyYWwiXVswXSkgewogICAgICAgICAgICB0aGlzLm92ZXJhbGxfYml0X3JhdGUgPSB0cmFja19kYXRhWyJHZW5lcmFsIl1bMF0ub3ZlcmFsbF9iaXRfcmF0ZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICgiZnJhbWVfcmF0ZSIgaW4gdHJhY2tfZGF0YVsiR2VuZXJhbCJdWzBdKSB7CiAgICAgICAgICAgIHRoaXMuZnJhbWVfcmF0ZSA9IHRyYWNrX2RhdGFbIkdlbmVyYWwiXVswXS5mcmFtZV9yYXRlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAodHJhY2tfZGF0YVsiVmlkZW8iXVswXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBpZiAoIndpZHRoIiBpbiB0cmFja19kYXRhWyJWaWRlbyJdWzBdKSB7CiAgICAgICAgICAgIHRoaXMud2lkdGggPSB0cmFja19kYXRhWyJWaWRlbyJdWzBdLndpZHRoOwogICAgICAgICAgfQogICAgICAgICAgaWYgKCJoZWlnaHQiIGluIHRyYWNrX2RhdGFbIlZpZGVvIl1bMF0pIHsKICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSB0cmFja19kYXRhWyJWaWRlbyJdWzBdLmhlaWdodDsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0gIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgaWYgKHRyYWNrX2RhdGFbIkF1ZGlvIl0ubGVuZ3RoID4gMCkgewogICAgICAgICAgICBpZiAoIm90aGVyX2JpdF9yYXRlIiBpbiB0cmFja19kYXRhWyJBdWRpbyJdWzBdKSB7CiAgICAgICAgICAgICAgdGhpcy5vdGhlcl9iaXRfcmF0ZSA9IHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0ub3RoZXJfYml0X3JhdGVbMF07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCJvdGhlcl9zYW1wbGluZ19yYXRlIiBpbiB0cmFja19kYXRhWyJBdWRpbyJdWzBdKSB7CiAgICAgICAgICAgICAgdGhpcy5vdGhlcl9zYW1wbGluZ19yYXRlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5vdGhlcl9zYW1wbGluZ19yYXRlWzBdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgib3RoZXJfbGFuZ3VhZ2UiIGluIHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0pIHsKICAgICAgICAgICAgICB0aGlzLm90aGVyX2xhbmd1YWdlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5vdGhlcl9sYW5ndWFnZVswXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoImVuY29kZWRfZGF0ZSIgaW4gdHJhY2tfZGF0YVsiQXVkaW8iXVswXSkgewogICAgICAgICAgICAgIHRoaXMuZW5jb2RlZF9kYXRlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5lbmNvZGVkX2RhdGU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmICgib3RoZXJfYml0X3JhdGUiIGluIHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0pIHsKICAgICAgICAgICAgdGhpcy5vdGhlcl9iaXRfcmF0ZSA9IHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0ub3RoZXJfYml0X3JhdGVbMF07CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoIm90aGVyX3NhbXBsaW5nX3JhdGUiIGluIHRyYWNrX2RhdGFbIkF1ZGlvIl1bMF0pIHsKICAgICAgICAgICAgdGhpcy5vdGhlcl9zYW1wbGluZ19yYXRlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5vdGhlcl9zYW1wbGluZ19yYXRlWzBdOwogICAgICAgICAgfQogICAgICAgICAgaWYgKCJvdGhlcl9sYW5ndWFnZSIgaW4gdHJhY2tfZGF0YVsiQXVkaW8iXVswXSkgewogICAgICAgICAgICB0aGlzLm90aGVyX2xhbmd1YWdlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5vdGhlcl9sYW5ndWFnZVswXTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICgiZW5jb2RlZF9kYXRlIiBpbiB0cmFja19kYXRhWyJBdWRpbyJdWzBdKSB7CiAgICAgICAgICAgIHRoaXMuZW5jb2RlZF9kYXRlID0gdHJhY2tfZGF0YVsiQXVkaW8iXVswXS5lbmNvZGVkX2RhdGU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuaXNCdXN5ID0gZmFsc2UKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["MediaSummaryBox.vue"],"names":[],"mappingsfile":"MediaSummaryBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-container fluid>\n    <b-row\n      align-v=\"center\"\n      class=\"my-1\"\n    >\n      <b-col>\n        <label>\n          <router-link :to=\"{ name: 'upload', query: { asset: $route.params.asset_id, mediaType: mediaType, s3key: s3Uri}}\">Perform Additional Analysis</router-link>\n        </label>\n        <br>\n        <label>Asset ID:</label>\n        {{ $route.params.asset_id }}\n        <br>\n        <label>Filename:&nbsp;</label>\n        <a\n          :href=\"videoUrl\" rel=\"noopener noreferrer\"\n          download\n        >\n          {{ filename }}\n        </a>\n        <br>\n        <div\n          v-if=\"isBusy === false\"\n          class=\"wrapper\"\n        >\n          <b-row>\n            <b-col>\n              <div v-if=\"duration !== 'undefined'\">\n                <label>Video duration:</label>\n                {{ duration }}\n              </div>\n              <div v-if=\"format !== 'undefined'\">\n                <label>Video format:</label>\n                {{ format }}\n              </div>\n              <div v-if=\"file_size !== 'undefined'\">\n                <label>Video file size:</label>\n                {{ file_size }} MB\n              </div>\n              <div v-if=\"overall_bit_rate !== 'undefined'\">\n                <label>Video bit rate:</label>\n                {{ overall_bit_rate }} bps\n              </div>\n              <div v-if=\"frame_rate !== 'undefined'\">\n                <label>Video frame rate:</label>\n                {{ frame_rate }} fps\n              </div>\n              <div v-if=\"width !== 'undefined' && height !== 'undefined' \">\n                <label>Video resolution:</label>\n                {{ width }} x {{ height }}\n              </div>\n            </b-col>\n            <b-col>\n              <div v-if=\"other_bit_rate !== 'undefined'\">\n                <label>Audio bit rate:</label>\n                {{ other_bit_rate }}\n              </div>\n              <div v-if=\"other_sampling_rate !== 'undefined'\">\n                <label>Audio sampling rate:</label>\n                {{ other_sampling_rate }}\n              </div>\n              <div v-if=\"other_language !== 'undefined'\">\n                <label>Audio Language:</label>\n                {{ other_language }}\n              </div>\n              <div v-if=\"encoded_date !== 'undefined'\">\n                <label>Encoded date:</label>\n                {{ encoded_date }}\n              </div>\n            </b-col>\n          </b-row>\n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\n  export default {\n    name: 'MediaSummary',\n    props: ['s3Uri','filename','videoUrl', 'mediaType'],\n    data () {\n      return {\n        duration: \"undefined\",\n        elasticsearch_data: [],\n        mediainfo_data: [],\n        format: \"undefined\",\n        file_size: \"undefined\",\n        overall_bit_rate: \"undefined\",\n        frame_rate: \"undefined\",\n        width: \"undefined\",\n        height: \"undefined\",\n        other_bit_rate: \"undefined\",\n        other_sampling_rate: \"undefined\",\n        other_language: \"undefined\",\n        encoded_date: \"undefined\",\n        isBusy: false,\n      }\n    },\n    deactivated: function () {\n      this.lineChart = Object\n    },\n    mounted: function () {\n      this.fetchAssetData();\n    },\n    beforeDestroy: function () {\n    },\n    methods: {\n      async fetchAssetData () {\n        this.isBusy = true;\n        let query = 'AssetId:'+this.$route.params.asset_id+' Operator:mediainfo';\n        let apiName = 'contentAnalysisElasticsearch';\n        let path = '/_search';\n        let apiParams = {\n          headers: {'Content-Type': 'application/json'},\n          queryStringParameters: {'q': query, 'default_operator': 'AND', 'size': 10000}\n        };\n        let response = await this.$Amplify.API.get(apiName, path, apiParams);\n        if (!response) {\n          this.showElasticSearchAlert = true\n        } else {\n          let es_data = [];\n          let result = await response;\n          let data = result.hits.hits;\n          for (let i = 0, len = data.length; i < len; i++) {\n            es_data.push(data[i]._source);\n          }\n          this.elasticsearch_data = JSON.parse(JSON.stringify(es_data));\n          let track_data = {\"General\": undefined, \"Video\": undefined, \"Audio\": undefined};\n          track_data[\"General\"] = this.elasticsearch_data.filter(x => x.track_type === \"General\");\n          track_data[\"Video\"] = this.elasticsearch_data.filter(x => x.track_type === \"Video\");\n          track_data[\"Audio\"] = this.elasticsearch_data.filter(x => x.track_type === \"Audio\");\n          if (track_data[\"General\"][0] !== undefined) {\n            if (\"duration\" in track_data[\"General\"][0]) {\n              let seconds = track_data[\"General\"][0].duration / 1000;\n              if (seconds >= 3600) {\n                this.duration = new Date(seconds * 1000).toISOString().substr(11, 8);\n              } else {\n                // drop hours portion if time is less than 1 hour\n                this.duration = new Date(seconds * 1000).toISOString().substr(14, 5);\n              }\n            }\n            if (\"format\" in track_data[\"General\"][0]) {\n              this.format = track_data[\"General\"][0].format;\n            }\n            if (\"file_size\" in track_data[\"General\"][0]) {\n              this.file_size = (track_data[\"General\"][0].file_size / 1000 / 1000).toFixed(2);\n            }\n            if (\"overall_bit_rate\" in track_data[\"General\"][0]) {\n              this.overall_bit_rate = track_data[\"General\"][0].overall_bit_rate;\n            }\n            if (\"frame_rate\" in track_data[\"General\"][0]) {\n              this.frame_rate = track_data[\"General\"][0].frame_rate;\n            }\n          }\n          if (track_data[\"Video\"][0] !== undefined) {\n            if (\"width\" in track_data[\"Video\"][0]) {\n              this.width = track_data[\"Video\"][0].width;\n            }\n            if (\"height\" in track_data[\"Video\"][0]) {\n              this.height = track_data[\"Video\"][0].height;\n            }\n          }\n          if (track_data[\"Audio\"][0] !== undefined) {\n            if (track_data[\"Audio\"].length > 0) {\n              if (\"other_bit_rate\" in track_data[\"Audio\"][0]) {\n                this.other_bit_rate = track_data[\"Audio\"][0].other_bit_rate[0];\n              }\n              if (\"other_sampling_rate\" in track_data[\"Audio\"][0]) {\n                this.other_sampling_rate = track_data[\"Audio\"][0].other_sampling_rate[0];\n              }\n              if (\"other_language\" in track_data[\"Audio\"][0]) {\n                this.other_language = track_data[\"Audio\"][0].other_language[0];\n              }\n              if (\"encoded_date\" in track_data[\"Audio\"][0]) {\n                this.encoded_date = track_data[\"Audio\"][0].encoded_date;\n              }\n            }\n            if (\"other_bit_rate\" in track_data[\"Audio\"][0]) {\n              this.other_bit_rate = track_data[\"Audio\"][0].other_bit_rate[0];\n            }\n            if (\"other_sampling_rate\" in track_data[\"Audio\"][0]) {\n              this.other_sampling_rate = track_data[\"Audio\"][0].other_sampling_rate[0];\n            }\n            if (\"other_language\" in track_data[\"Audio\"][0]) {\n              this.other_language = track_data[\"Audio\"][0].other_language[0];\n            }\n            if (\"encoded_date\" in track_data[\"Audio\"][0]) {\n              this.encoded_date = track_data[\"Audio\"][0].encoded_date;\n            }\n          }\n          this.isBusy = false\n        }\n      }\n    }\n  }\n</script>\n\n<style>\n\n</style>\n"]}]}