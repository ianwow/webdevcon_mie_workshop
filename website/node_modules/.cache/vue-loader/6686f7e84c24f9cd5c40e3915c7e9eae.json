{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/Translation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/Translation.vue","mtime":1623875433280},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/thread-loader/dist/cjs.js","mtime":1633407346686},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJhbnNsYXRpb24iLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0cmFuc2xhdGVkX3RleHQ6ICIiLAogICAgICBzb3VyY2VfbGFuZ3VhZ2U6ICIiLAogICAgICB0YXJnZXRfbGFuZ3VhZ2U6ICIiLAogICAgICBpc0J1c3k6IGZhbHNlLAogICAgICBvcGVyYXRvcjogInRyYW5zbGF0aW9uIiwKICAgICAgbm9UcmFuc2xhdGlvbjogZmFsc2UKICAgIH0KICB9LAogIGRlYWN0aXZhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICBjb25zb2xlLmxvZygnZGVhY3RpdmF0ZWQgY29tcG9uZW50OicsIHRoaXMub3BlcmF0b3IpCiAgfSwKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGNvbnNvbGUubG9nKCdhY3RpdmF0ZWQgY29tcG9uZW50OicsIHRoaXMub3BlcmF0b3IpOwogICAgdGhpcy5mZXRjaEFzc2V0RGF0YSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLnRyYW5zbGF0ZWRfdGV4dCA9ICIiOwogICAgICB0aGlzLnNvdXJjZV9sYW5ndWFnZSA9ICIiOwogICAgICB0aGlzLnRhcmdldF9sYW5ndWFnZSA9ICIiOwogICAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaEFzc2V0RGF0YSAoKSB7CiAgICAgIGxldCBxdWVyeSA9ICdBc3NldElkOicrdGhpcy4kcm91dGUucGFyYW1zLmFzc2V0X2lkKyAnIF9pbmRleDptaWV0cmFuc2xhdGlvbic7CiAgICAgIGxldCBhcGlOYW1lID0gJ2NvbnRlbnRBbmFseXNpc0VsYXN0aWNzZWFyY2gnOwogICAgICBsZXQgcGF0aCA9ICcvX3NlYXJjaCc7CiAgICAgIGxldCBhcGlQYXJhbXMgPSB7CiAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9LAogICAgICAgIHF1ZXJ5U3RyaW5nUGFyYW1ldGVyczogeydxJzogcXVlcnksICdkZWZhdWx0X29wZXJhdG9yJzogJ0FORCcsICdzaXplJzogMTAwMDB9CiAgICAgIH07CiAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJEFtcGxpZnkuQVBJLmdldChhcGlOYW1lLCBwYXRoLCBhcGlQYXJhbXMpOwogICAgICBpZiAoIXJlc3BvbnNlKSB7CiAgICAgICAgdGhpcy5zaG93RWxhc3RpY1NlYXJjaEFsZXJ0ID0gdHJ1ZQogICAgICB9CiAgICAgIGVsc2UgewogICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCByZXNwb25zZTsKICAgICAgICBsZXQgZGF0YSA9IHJlc3VsdC5oaXRzLmhpdHM7CiAgICAgICAgaWYgKGRhdGEubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICB0aGlzLm5vVHJhbnNsYXRpb24gPSB0cnVlCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgdGhpcy5ub1RyYW5zbGF0aW9uID0gZmFsc2U7CiAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gZGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICB0aGlzLnRyYW5zbGF0ZWRfdGV4dCA9IGRhdGFbaV0uX3NvdXJjZS5UcmFuc2xhdGVkVGV4dDsKICAgICAgICAgICAgdGhpcy5zb3VyY2VfbGFuZ3VhZ2UgPSBkYXRhW2ldLl9zb3VyY2UuU291cmNlTGFuZ3VhZ2VDb2RlOwogICAgICAgICAgICB0aGlzLnRhcmdldF9sYW5ndWFnZSA9IGRhdGFbaV0uX3NvdXJjZS5UYXJnZXRMYW5ndWFnZUNvZGUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5pc0J1c3kgPSBmYWxzZQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Translation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Translation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"noTranslation === true\">\n      No translation found for this asset\n    </div>\n    <div\n      v-if=\"isBusy\"\n      class=\"wrapper\"\n    >\n      <b-spinner\n        variant=\"secondary\"\n        label=\"Loading...\"\n      />\n      <p class=\"text-muted\">\n        (Loading...)\n      </p>\n    </div>\n    <div\n      v-else-if=\"noTranslation === false\"\n      class=\"wrapper\"\n    >\n      <label>Source Language:</label> {{ source_language }}<br>\n      <label>Target Language:</label> {{ target_language }}<br>\n      {{ translated_text }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Translation\",\n  data() {\n    return {\n      translated_text: \"\",\n      source_language: \"\",\n      target_language: \"\",\n      isBusy: false,\n      operator: \"translation\",\n      noTranslation: false\n    }\n  },\n  deactivated: function () {\n    console.log('deactivated component:', this.operator)\n  },\n  activated: function () {\n    console.log('activated component:', this.operator);\n    this.fetchAssetData();\n  },\n  beforeDestroy: function () {\n      this.translated_text = \"\";\n      this.source_language = \"\";\n      this.target_language = \"\";\n    },\n  methods: {\n    async fetchAssetData () {\n      let query = 'AssetId:'+this.$route.params.asset_id+ ' _index:mietranslation';\n      let apiName = 'contentAnalysisElasticsearch';\n      let path = '/_search';\n      let apiParams = {\n        headers: {'Content-Type': 'application/json'},\n        queryStringParameters: {'q': query, 'default_operator': 'AND', 'size': 10000}\n      };\n      let response = await this.$Amplify.API.get(apiName, path, apiParams);\n      if (!response) {\n        this.showElasticSearchAlert = true\n      }\n      else {\n        let result = await response;\n        let data = result.hits.hits;\n        if (data.length === 0) {\n          this.noTranslation = true\n        }\n        else {\n          this.noTranslation = false;\n          for (let i = 0, len = data.length; i < len; i++) {\n            this.translated_text = data[i]._source.TranslatedText;\n            this.source_language = data[i]._source.SourceLanguageCode;\n            this.target_language = data[i]._source.TargetLanguageCode\n          }\n        }\n        this.isBusy = false\n      }\n    }\n  }\n}\n</script>\n"]}]}