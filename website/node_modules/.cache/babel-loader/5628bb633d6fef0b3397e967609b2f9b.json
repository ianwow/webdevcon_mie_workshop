{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/vue-dropzone.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/vue-dropzone.vue","mtime":1623875433282},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vue-dropzone.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    :id=\"id\"\n    ref=\"dropzoneElement\"\n    :class=\"{ 'vue-dropzone dropzone': includeStyling }\"\n  >\n    <div\n      v-if=\"useCustomSlot\"\n      class=\"dz-message\"\n    >\n      <slot>Drop files here to upload</slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropzone from 'dropzone' //eslint-disable-line\n\nDropzone.autoDiscover = false\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true,\n      default:'dropzone'\n    },\n    options: {\n      type: Object,\n      required: true\n    },\n    includeStyling: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    awss3: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    destroyDropzone: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    duplicateCheck: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    useCustomSlot: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data() {\n    return {\n      isS3: false,\n      isS3OverridesServerPropagation: false,\n      wasQueueAutoProcess: true,\n    }\n  },\n  computed: {\n    dropzoneSettings() {\n      let defaultValues = {\n        thumbnailWidth: 200,\n        thumbnailHeight: 200\n      }\n      Object.keys(this.options).forEach(function(key) {\n        defaultValues[key] = this.options[key]\n      }, this)\n      if (this.awss3 !== null) {\n        defaultValues['autoProcessQueue'] = false\n        this.isS3 = true //eslint-disable-line\n        this.isS3OverridesServerPropagation = (this.awss3.sendFileToServer === false)  //eslint-disable-line\n        if (this.options.autoProcessQueue !== undefined)\n          this.wasQueueAutoProcess = this.options.autoProcessQueue //eslint-disable-line\n\n        if (this.isS3OverridesServerPropagation) {\n          defaultValues['url'] = (files) => {\n            return files[0].s3Url;\n          }\n        }\n      }\n      return defaultValues\n    }\n  },\n  mounted () {\n    if (this.$isServer && this.hasBeenMounted) {\n      return\n    }\n    this.hasBeenMounted = true\n\n    this.dropzone = new Dropzone(this.$refs.dropzoneElement, this.dropzoneSettings)\n    let vm = this\n\n    this.dropzone.on('thumbnail', function(file, dataUrl) {\n      vm.$emit('vdropzone-thumbnail', file, dataUrl)\n    })\n\n    this.dropzone.on('addedfile', function(file) {\n      if (vm.duplicateCheck) {\n        if (this.files.length) {\n          var _i, _len;\n          for (_i = 0, _len = this.files.length; _i < _len - 1; _i++) // -1 to exclude current file\n            {\n                if(this.files[_i].name === file.name && this.files[_i].size === file.size && this.files[_i].lastModifiedDate.toString() === file.lastModifiedDate.toString())\n                {\n                    this.removeFile(file);\n                    vm.$emit('vdropzone-duplicate-file', file)\n                }\n            }\n        }\n      }\n\n      vm.$emit('vdropzone-file-added', file)\n      if (vm.isS3 && vm.wasQueueAutoProcess && ! file.manuallyAdded) {\n        vm.getSignedAndUploadToS3(file);\n      }\n    })\n\n    this.dropzone.on('addedfiles', function(files) {\n      vm.$emit('vdropzone-files-added', files)\n    })\n\n    this.dropzone.on('removedfile', function(file) {\n      vm.$emit('vdropzone-removed-file', file)\n      if (file.manuallyAdded && vm.dropzone.options.maxFiles !== null) vm.dropzone.options.maxFiles++\n    })\n\n    this.dropzone.on('success', function(file, response) {\n      vm.$emit('vdropzone-success', file, response)\n      if (vm.isS3) {\n        if(vm.isS3OverridesServerPropagation){\n          var xmlResponse = (new window.DOMParser()).parseFromString(response, \"text/xml\");\n          var s3ObjectLocation = xmlResponse.firstChild.children[0].innerHTML;\n          vm.$emit('vdropzone-s3-upload-success', s3ObjectLocation);\n        }\n          if (vm.wasQueueAutoProcess)\n            vm.setOption('autoProcessQueue', false);\n      }\n    })\n\n    this.dropzone.on('successmultiple', function(file, response) {\n      vm.$emit('vdropzone-success-multiple', file, response)\n    })\n\n    this.dropzone.on('error', function(file, message, xhr) {\n      vm.$emit('vdropzone-error', file, message, xhr)\n      if (this.isS3)\n        vm.$emit('vdropzone-s3-upload-error');\n    })\n\n    this.dropzone.on('errormultiple', function(files, message, xhr) {\n      vm.$emit('vdropzone-error-multiple', files, message, xhr)\n    })\n    delete this.dropzone['submitRequest'];\n    this.dropzone.submitRequest = function() {\n      // Dropzone's xhr formatted upload request has been\n      // replaced by an Amplify API call, so we're overriding\n      // submitRequest here in order to skip Dropzone's xhr request.\n    };\n\n    this.dropzone.on('sendingmultiple', function(file, xhr, formData) {\n      vm.$emit('vdropzone-sending-multiple', file, xhr, formData)\n    })\n\n    this.dropzone.on('complete', function(file) {\n      vm.$emit('vdropzone-complete', file)\n    })\n\n    this.dropzone.on('completemultiple', function(files) {\n      vm.$emit('vdropzone-complete-multiple', files)\n    })\n\n    this.dropzone.on('canceled', function(file) {\n      vm.$emit('vdropzone-canceled', file)\n    })\n\n    this.dropzone.on('canceledmultiple', function(files) {\n      vm.$emit('vdropzone-canceled-multiple', files)\n    })\n\n    this.dropzone.on('maxfilesreached', function(files) {\n      vm.$emit('vdropzone-max-files-reached', files)\n    })\n\n    this.dropzone.on('maxfilesexceeded', function(file) {\n      vm.$emit('vdropzone-max-files-exceeded', file)\n    })\n\n    this.dropzone.on('processing', function(file) {\n      vm.$emit('vdropzone-processing', file)\n    })\n\n    this.dropzone.on('processingmultiple', function(files) {\n      vm.$emit('vdropzone-processing-multiple', files)\n    })\n\n    this.dropzone.on('uploadprogress', function(file, progress, bytesSent) {\n      vm.$emit('vdropzone-upload-progress', file, progress, bytesSent)\n    })\n\n    this.dropzone.on('totaluploadprogress', function(totaluploadprogress, totalBytes, totalBytesSent) {\n      vm.$emit('vdropzone-total-upload-progress', totaluploadprogress, totalBytes, totalBytesSent)\n    })\n\n    this.dropzone.on('reset', function() {\n      vm.$emit('vdropzone-reset')\n    })\n\n    this.dropzone.on('queuecomplete', function() {\n      vm.$emit('vdropzone-queue-complete')\n    })\n\n    this.dropzone.on('drop', function(event) {\n      vm.$emit('vdropzone-drop', event)\n    })\n\n    this.dropzone.on('dragstart', function(event) {\n      vm.$emit('vdropzone-drag-start', event)\n    })\n\n    this.dropzone.on('dragend', function(event) {\n      vm.$emit('vdropzone-drag-end', event)\n    })\n\n    this.dropzone.on('dragenter', function(event) {\n      vm.$emit('vdropzone-drag-enter', event)\n    })\n\n    this.dropzone.on('dragover', function(event) {\n      vm.$emit('vdropzone-drag-over', event)\n    })\n\n    this.dropzone.on('dragleave', function(event) {\n      vm.$emit('vdropzone-drag-leave', event)\n    })\n\n    vm.$emit('vdropzone-mounted')\n  },\n  beforeDestroy() {\n    if (this.destroyDropzone) this.dropzone.destroy()\n  },\n  methods: {\n    manuallyAddFile: function(file, fileUrl) {\n      file.manuallyAdded = true\n      this.dropzone.emit(\"addedfile\", file)\n      let containsImageFileType = false\n      if (fileUrl.indexOf('.svg') > -1 || fileUrl.indexOf('.png') > -1 || fileUrl.indexOf('.jpg') > -1 || fileUrl.indexOf('.jpeg') > -1 || fileUrl.indexOf('.gif') > -1) containsImageFileType = true\n      if (this.dropzone.options.createImageThumbnails && containsImageFileType && file.size <= this.dropzone.options.maxThumbnailFilesize * 1024 * 1024) {\n        fileUrl && this.dropzone.emit(\"thumbnail\", file, fileUrl);\n\n        var thumbnails = file.previewElement.querySelectorAll('[data-dz-thumbnail]');\n        for (var i = 0; i < thumbnails.length; i++) {\n          thumbnails[i].style.width = this.dropzoneSettings.thumbnailWidth + 'px';\n          thumbnails[i].style.height = this.dropzoneSettings.thumbnailHeight + 'px';\n          thumbnails[i].style['object-fit'] = 'contain';\n        }\n      }\n      this.dropzone.emit(\"complete\", file)\n      if (this.dropzone.options.maxFiles) this.dropzone.options.maxFiles--\n      this.dropzone.files.push(file)\n      this.$emit('vdropzone-file-added-manually', file)\n    },\n    setOption: function(option, value) {\n      this.dropzone.options[option] = value\n    },\n    removeAllFiles: function(bool) {\n      this.dropzone.removeAllFiles(bool)\n    },\n    processQueue: function() {\n      const vm = this;\n      let dropzoneEle = this.dropzone;\n      this.$emit('vdropzone-sending')\n      if (this.isS3 && !this.wasQueueAutoProcess) {\n        this.getQueuedFiles().forEach((file) => {\n          this.getSignedAndUploadToS3(file);\n        });\n      } else {\n        this.dropzone.processQueue();\n      }\n      this.dropzone.on(\"success\", function(file) {\n        dropzoneEle.options.autoProcessQueue = true\n        vm.$emit('success', file)\n      });\n      this.dropzone.on('queuecomplete', function() {\n        dropzoneEle.options.autoProcessQueue = false\n        vm.$emit('vdropzone-queue-complete')\n      });\n      this.dropzone.on('removedfile', function(file) {\n        if (this.getFilesWithStatus().length === 0) {\n          vm.$emit('vdropzone-queue-complete')\n        }\n        vm.$Amplify.Storage.cancel(file.send_promise, \"The user canceled this upload.\");\n      });\n\n    },\n    init: function() {\n      return this.dropzone.init();\n    },\n    destroy: function() {\n      return this.dropzone.destroy();\n    },\n    updateTotalUploadProgress: function() {\n      return this.dropzone.updateTotalUploadProgress();\n    },\n    getFallbackForm: function() {\n      return this.dropzone.getFallbackForm();\n    },\n    getExistingFallback: function() {\n      return this.dropzone.getExistingFallback();\n    },\n    setupEventListeners: function() {\n      return this.dropzone.setupEventListeners();\n    },\n    removeEventListeners: function() {\n      return this.dropzone.removeEventListeners();\n    },\n    disable: function() {\n      return this.dropzone.disable();\n    },\n    enable: function() {\n      return this.dropzone.enable();\n    },\n    filesize: function(size) {\n      return this.dropzone.filesize(size);\n    },\n    accept: function(file, done) {\n      return this.dropzone.accept(file, done);\n    },\n    addFile: function(file) {\n      return this.dropzone.addFile(file);\n    },\n    removeFile: function(file) {\n      this.dropzone.removeFile(file)\n    },\n    getAcceptedFiles: function() {\n      return this.dropzone.getAcceptedFiles()\n    },\n    getRejectedFiles: function() {\n      return this.dropzone.getRejectedFiles()\n    },\n    getFilesWithStatus: function() {\n      return this.dropzone.getFilesWithStatus()\n    },\n    getQueuedFiles: function() {\n      return this.dropzone.getQueuedFiles()\n    },\n    getUploadingFiles: function() {\n      return this.dropzone.getUploadingFiles()\n    },\n    getAddedFiles: function() {\n      return this.dropzone.getAddedFiles()\n    },\n    getActiveFiles: function() {\n      return this.dropzone.getActiveFiles()\n    },\n    async getSignedAndUploadToS3(file) {\n      let key = 'upload/' + file.name\n      let vm = this\n      this.dropzone.emit(\"processing\", file);\n      file.status = this.dropzone.UPLOADING;\n      file.processing = true;\n      let promise = null;\n      try {\n        promise = this.$Amplify.Storage.put(key, file, {\n          level: 'public',\n          // Not actually public in the S3 sense, this is just an Amplify construct.\n          // Public makes this file accessible by all the authenticated users of this\n          // app. Files are stored under the public/ path of the dataplane S3 bucket.\n          progressCallback(progress) {\n            vm.isUploading = true\n            vm.uploadValue = 0\n            const totalUploadProgress = (progress.loaded / progress.total) * 100\n            const bytesSent = progress.loaded\n            file.send_promise = promise\n            vm.dropzone.emit(\n                \"uploadprogress\",\n                file,\n                totalUploadProgress,\n                bytesSent\n            );\n          },\n        })\n        await promise;\n        promise.then((response) => {\n          // Amplify upload returns a {key: S3 Object key} object on success.\n          // We use that to determine whether upload was successful:\n          if (response.key !== undefined) {\n            console.log(\"upload complete\")\n            file.s3_key = \"public/\"+response.key\n            vm.dropzone.emit(\"success\", file);\n            vm.dropzone.emit(\"complete\", file);\n            vm.dropzone.emit(\"vdropzone-s3-upload-success\", \"upload success\");\n          } else {\n            vm.dropzone.emit('vdropzone-s3-upload-error', \"upload error\");\n          }\n        })\n      } catch (err) {\n        console.log(\"Error: \" + err)\n        // file.status = vm.dropzone.SUCCESS;\n        vm.isUploading = null\n        vm.uploadValue = null\n        vm.file = null\n      }\n    },\n  }\n}\n\n</script>\n\n<style>\n  .vue-dropzone {\n    border: 2px solid #E5E5E5;\n    font-family: 'Arial', sans-serif;\n    letter-spacing: 0.2px;\n    color: #777;\n    transition: .2s linear;\n   }\n\n  .vue-dropzone:hover {\n    background-color: #F6F6F6;\n  }\n\n  .vue-dropzone > i {\n    color: #CCC;\n  }\n\n  .vue-dropzone > .dz-preview .dz-image {\n    border-radius: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .vue-dropzone > .dz-preview .dz-image img:not([src]) {\n    width: 200px;\n    height: 200px;\n  }\n\n  .vue-dropzone > .dz-preview .dz-image:hover img {\n    transform: none;\n    -webkit-filter: none;\n  }\n\n  .vue-dropzone > .dz-preview .dz-details {\n    bottom: 0;\n    top: 0;\n    color: white;\n    background-color: rgba(33, 150, 243, 0.8);\n    transition: opacity .2s linear;\n    text-align: left;\n  }\n\n  .vue-dropzone > .dz-preview .dz-details .dz-filename {\n    overflow: hidden;\n  }\n\n  .vue-dropzone > .dz-preview .dz-details .dz-filename span, .vue-dropzone > .dz-preview .dz-details .dz-size span {\n    background-color: transparent;\n  }\n\n  .vue-dropzone > .dz-preview .dz-details .dz-filename:not(:hover) span {\n    border: none;\n  }\n\n  .vue-dropzone > .dz-preview .dz-details .dz-filename:hover span {\n    background-color: transparent;\n    border: none;\n  }\n\n  .vue-dropzone > .dz-preview .dz-progress .dz-upload {\n    background: #cccccc;\n  }\n\n  .vue-dropzone > .dz-preview .dz-remove  {\n    position: absolute;\n    z-index: 30;\n    color: white;\n    margin-left: 15px;\n    padding: 10px;\n    top: inherit;\n    bottom: 15px;\n    border: 2px white solid;\n    text-decoration: none;\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    font-weight: 800;\n    letter-spacing: 1.1px;\n    opacity: 0;\n  }\n\n  .vue-dropzone > .dz-preview:hover .dz-remove {\n    opacity: 1;\n  }\n\n  .vue-dropzone > .dz-preview .dz-success-mark, .vue-dropzone > .dz-preview .dz-error-mark {\n    margin-left: auto;\n    margin-top: auto;\n    width: 100%;\n    top: 35%;\n    left: 0;\n  }\n\n  .vue-dropzone > .dz-preview .dz-success-mark svg, .vue-dropzone > .dz-preview .dz-error-mark svg {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .vue-dropzone > .dz-preview .dz-error-message {\n    margin-left: auto;\n    margin-right: auto;\n    left: 0;\n    width: 100%;\n    text-align: center;\n  }\n\n  .vue-dropzone > .dz-preview .dz-error-message:after {\n    display: none;\n  }\n\n</style>\n"],"sourceRoot":"src/components"}]}