{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/thread-loader/dist/cjs.js!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/views/UploadToAWSS3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/views/UploadToAWSS3.vue","mtime":1633712488562},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/thread-loader/dist/cjs.js","mtime":1633407346686},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pYW53b3cvZGV2ZWxvcG1lbnQvYXdzLWNvbnRlbnQtYW5hbHlzaXMvc291cmNlL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvaWFud293L2RldmVsb3BtZW50L2F3cy1jb250ZW50LWFuYWx5c2lzL3NvdXJjZS93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgdnVlRHJvcHpvbmUgZnJvbSAnQC9jb21wb25lbnRzL3Z1ZS1kcm9wem9uZS52dWUnOwppbXBvcnQgSGVhZGVyIGZyb20gJ0AvY29tcG9uZW50cy9IZWFkZXIudnVlJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIHZ1ZURyb3B6b25lOiB2dWVEcm9wem9uZSwKICAgIEhlYWRlcjogSGVhZGVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdEFwaTI6ICcnLAogICAgICBjdXJsV29ya2Zsb3c6ICdWaWRlbycsCiAgICAgIGN1cmxXb3JrZmxvd1R5cGVzOiBbIkltYWdlIiwgIlZpZGVvIl0sCiAgICAgIHNob3dXb3JrZmxvd1N0YXR1c0FwaTogZmFsc2UsCiAgICAgIHNob3dFeGVjdXRlQXBpOiBmYWxzZSwKICAgICAgc2hvd0dlbmVyaWNPcGVyYXRvckhlbHA6IGZhbHNlLAogICAgICByZXF1ZXN0VVJMOiAiIiwKICAgICAgcmVxdWVzdEJvZHk6ICIiLAogICAgICByZXF1ZXN0VHlwZTogIiIsCiAgICAgIGZpZWxkczogW3sKICAgICAgICAnYXNzZXRfaWQnOiB7CiAgICAgICAgICBsYWJlbDogIkFzc2V0IElkIiwKICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZQogICAgICAgIH0KICAgICAgfSwgewogICAgICAgICdmaWxlX25hbWUnOiB7CiAgICAgICAgICBsYWJlbDogIkZpbGUgTmFtZSIsCiAgICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICAnd29ya2Zsb3dfc3RhdHVzJzogewogICAgICAgICAgbGFiZWw6ICdXb3JrZmxvdyBTdGF0dXMnLAogICAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgICAgfQogICAgICB9XSwKICAgICAgdGh1bWJuYWlsX3Bvc2l0aW9uOiAxMCwKICAgICAgaW52YWxpZF9maWxlX3R5cGVzOiAwLAogICAgICB1cGxvYWRfaW5fcHJvZ3Jlc3M6IGZhbHNlLAogICAgICBlbmFibGVkT3BlcmF0b3JzOiBbImxhYmVsRGV0ZWN0aW9uIiwgImNlbGVicml0eVJlY29nbml0aW9uIiwgInRleHREZXRlY3Rpb24iLCAiY29udGVudE1vZGVyYXRpb24iLCAiZmFjZURldGVjdGlvbiIsICJ0aHVtYm5haWwiLCAiVHJhbnNjcmliZVZpZGVvIiwgIlRyYW5zbGF0ZSIsICJDb21wcmVoZW5kS2V5UGhyYXNlcyIsICJDb21wcmVoZW5kRW50aXRpZXMiLCAic2hvdERldGVjdGlvbiIsICJ0ZWNobmljYWxDdWVEZXRlY3Rpb24iXSwKICAgICAgdmlkZW9PcGVyYXRvcnM6IFt7CiAgICAgICAgdGV4dDogIk9iamVjdCBEZXRlY3Rpb24iLAogICAgICAgIHZhbHVlOiAibGFiZWxEZXRlY3Rpb24iCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiVGVjaG5pY2FsIEN1ZSBEZXRlY3Rpb24iLAogICAgICAgIHZhbHVlOiAidGVjaG5pY2FsQ3VlRGV0ZWN0aW9uIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIlNob3QgRGV0ZWN0aW9uIiwKICAgICAgICB2YWx1ZTogInNob3REZXRlY3Rpb24iCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQ2VsZWJyaXR5IFJlY29nbml0aW9uIiwKICAgICAgICB2YWx1ZTogImNlbGVicml0eVJlY29nbml0aW9uIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIkNvbnRlbnQgTW9kZXJhdGlvbiIsCiAgICAgICAgdmFsdWU6ICJjb250ZW50TW9kZXJhdGlvbiIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJGYWNlIERldGVjdGlvbiIsCiAgICAgICAgdmFsdWU6ICJmYWNlRGV0ZWN0aW9uIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIldvcmQgRGV0ZWN0aW9uIiwKICAgICAgICB2YWx1ZTogInRleHREZXRlY3Rpb24iCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRmFjZSBTZWFyY2giLAogICAgICAgIHZhbHVlOiAiZmFjZVNlYXJjaCIKICAgICAgfSwgewogICAgICAgIGh0bWw6ICJHZW5lcmljIERhdGEgTG9va3VwIiwKICAgICAgICB2YWx1ZTogImdlbmVyaWNEYXRhTG9va3VwIgogICAgICB9XSwKICAgICAgYXVkaW9PcGVyYXRvcnM6IFt7CiAgICAgICAgdGV4dDogIlRyYW5zY3JpYmUiLAogICAgICAgIHZhbHVlOiAiVHJhbnNjcmliZVZpZGVvIgogICAgICB9XSwKICAgICAgdGV4dE9wZXJhdG9yczogW3sKICAgICAgICB0ZXh0OiAiQ29tcHJlaGVuZCBLZXkgUGhyYXNlcyIsCiAgICAgICAgdmFsdWU6ICJDb21wcmVoZW5kS2V5UGhyYXNlcyIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJDb21wcmVoZW5kIEVudGl0aWVzIiwKICAgICAgICB2YWx1ZTogIkNvbXByZWhlbmRFbnRpdGllcyIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJUcmFuc2xhdGUiLAogICAgICAgIHZhbHVlOiAiVHJhbnNsYXRlIgogICAgICB9XSwKICAgICAgZmFjZUNvbGxlY3Rpb25JZDogIiIsCiAgICAgIGdlbmVyaWNEYXRhRmlsZW5hbWU6ICIiLAogICAgICBDb21wcmVoZW5kRW5jcnlwdGlvbjogZmFsc2UsCiAgICAgIGttc0tleUlkOiAiIiwKICAgICAgdHJhbnNjcmliZUxhbmd1YWdlOiAiZW4tVVMiLAogICAgICB0cmFuc2NyaWJlTGFuZ3VhZ2VzOiBbewogICAgICAgIHRleHQ6ICdBcmFiaWMsIEd1bGYnLAogICAgICAgIHZhbHVlOiAnYXItQUUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQXJhYmljLCBNb2Rlcm4gU3RhbmRhcmQnLAogICAgICAgIHZhbHVlOiAnYXItU0EnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQ2hpbmVzZSBNYW5kYXJpbicsCiAgICAgICAgdmFsdWU6ICd6aC1DTicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdEdXRjaCcsCiAgICAgICAgdmFsdWU6ICdubC1OTCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdFbmdsaXNoLCBBdXN0cmFsaWFuJywKICAgICAgICB2YWx1ZTogJ2VuLUFVJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VuZ2xpc2gsIEJyaXRpc2gnLAogICAgICAgIHZhbHVlOiAnZW4tR0InCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRW5nbGlzaCwgSW5kaWFuLWFjY2VudGVkJywKICAgICAgICB2YWx1ZTogJ2VuLUlOJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VuZ2xpc2gsIElyaXNoJywKICAgICAgICB2YWx1ZTogJ2VuLUlFJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VuZ2xpc2gsIFNjb3R0aXNoJywKICAgICAgICB2YWx1ZTogJ2VuLUFCJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VuZ2xpc2gsIFVTJywKICAgICAgICB2YWx1ZTogJ2VuLVVTJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VuZ2xpc2gsIFdlbHNoJywKICAgICAgICB2YWx1ZTogJ2VuLVdMJwogICAgICB9LCAvLyBEaXNhYmxlZCB1bnRpbCAnZmEnIHN1cHBvcnRlZCBieSBBV1MgVHJhbnNsYXRlCiAgICAgIC8vIHt0ZXh0OiAnRmFyc2knLCB2YWx1ZTogJ2ZhLUlSJ30sCiAgICAgIHsKICAgICAgICB0ZXh0OiAnRnJlbmNoJywKICAgICAgICB2YWx1ZTogJ2ZyLUZSJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0ZyZW5jaCwgQ2FuYWRpYW4nLAogICAgICAgIHZhbHVlOiAnZnItQ0EnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnR2VybWFuJywKICAgICAgICB2YWx1ZTogJ2RlLURFJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0dlcm1hbiwgU3dpc3MnLAogICAgICAgIHZhbHVlOiAnZGUtQ0gnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSGVicmV3JywKICAgICAgICB2YWx1ZTogJ2hlLUlMJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0hpbmRpJywKICAgICAgICB2YWx1ZTogJ2hpLUlOJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0luZG9uZXNpYW4nLAogICAgICAgIHZhbHVlOiAnaWQtSUQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSXRhbGlhbicsCiAgICAgICAgdmFsdWU6ICdpdC1JVCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdKYXBhbmVzZScsCiAgICAgICAgdmFsdWU6ICdqYS1KUCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdLb3JlYW4nLAogICAgICAgIHZhbHVlOiAna28tS1InCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnTWFsYXknLAogICAgICAgIHZhbHVlOiAnbXMtTVknCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUG9ydHVndWVzZScsCiAgICAgICAgdmFsdWU6ICdwdC1QVCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdQb3J0dWd1ZXNlLCBCcmF6aWxpYW4nLAogICAgICAgIHZhbHVlOiAncHQtQlInCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUnVzc2lhbicsCiAgICAgICAgdmFsdWU6ICdydS1SVScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTcGFuaXNoJywKICAgICAgICB2YWx1ZTogJ2VzLUVTJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1NwYW5pc2gsIFVTJywKICAgICAgICB2YWx1ZTogJ2VzLVVTJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1RhbWlsJywKICAgICAgICB2YWx1ZTogJ3RhLUlOJwogICAgICB9LCAvLyBEaXNhYmxlZCB1bnRpbCAndGUnIHN1cHBvcnRlZCBieSBBV1MgVHJhbnNsYXRlCiAgICAgIC8vIHt0ZXh0OiAnVGVsdWd1JywgdmFsdWU6ICd0ZS1JTid9LAogICAgICB7CiAgICAgICAgdGV4dDogJ1R1cmtpc2gnLAogICAgICAgIHZhbHVlOiAndHItVFInCiAgICAgIH1dLAogICAgICB0cmFuc2xhdGVMYW5ndWFnZXM6IFt7CiAgICAgICAgdGV4dDogJ0FmcmlrYWFucycsCiAgICAgICAgdmFsdWU6ICdhZicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdBbGJhbmlhbicsCiAgICAgICAgdmFsdWU6ICdzcScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdBbWhhcmljJywKICAgICAgICB2YWx1ZTogJ2FtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0FyYWJpYycsCiAgICAgICAgdmFsdWU6ICdhcicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdBemVyYmFpamFuaScsCiAgICAgICAgdmFsdWU6ICdheicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdCZW5nYWxpJywKICAgICAgICB2YWx1ZTogJ2JuJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0Jvc25pYW4nLAogICAgICAgIHZhbHVlOiAnYnMnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQnVsZ2FyaWFuJywKICAgICAgICB2YWx1ZTogJ2JnJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0NoaW5lc2UgKFNpbXBsaWZpZWQpJywKICAgICAgICB2YWx1ZTogJ3poJwogICAgICB9LCAvLyBBV1MgVHJhbnNsYXRlIGRvZXMgbm90IHN1cHBvcnQgdHJhbnNsYXRpbmcgZnJvbSB6aCB0byB6aC1UVwogICAgICAvLyB7dGV4dDogJ0NoaW5lc2UgKFRyYWRpdGlvbmFsKScsIHZhbHVlOiAnemgtVFcnfSwKICAgICAgewogICAgICAgIHRleHQ6ICdDcm9hdGlhbicsCiAgICAgICAgdmFsdWU6ICdocicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdDemVjaCcsCiAgICAgICAgdmFsdWU6ICdjcycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdEYW5pc2gnLAogICAgICAgIHZhbHVlOiAnZGEnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRGFyaScsCiAgICAgICAgdmFsdWU6ICdmYS1BRicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdEdXRjaCcsCiAgICAgICAgdmFsdWU6ICdubCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdFbmdsaXNoJywKICAgICAgICB2YWx1ZTogJ2VuJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0VzdG9uaWFuJywKICAgICAgICB2YWx1ZTogJ2V0JwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0Zpbm5pc2gnLAogICAgICAgIHZhbHVlOiAnZmknCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRnJlbmNoJywKICAgICAgICB2YWx1ZTogJ2ZyJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0ZyZW5jaCAoQ2FuYWRpYW4pJywKICAgICAgICB2YWx1ZTogJ2ZyLUNBJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0dlb3JnaWFuJywKICAgICAgICB2YWx1ZTogJ2thJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0dlcm1hbicsCiAgICAgICAgdmFsdWU6ICdkZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdHcmVlaycsCiAgICAgICAgdmFsdWU6ICdlbCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdIYXVzYScsCiAgICAgICAgdmFsdWU6ICdoYScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdIZWJyZXcnLAogICAgICAgIHZhbHVlOiAnaGUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSGluZGknLAogICAgICAgIHZhbHVlOiAnaGknCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSHVuZ2FyaWFuJywKICAgICAgICB2YWx1ZTogJ2h1JwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0luZG9uZXNpYW4nLAogICAgICAgIHZhbHVlOiAnaWQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSXRhbGlhbicsCiAgICAgICAgdmFsdWU6ICdpdCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdKYXBhbmVzZScsCiAgICAgICAgdmFsdWU6ICdqYScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdLb3JlYW4nLAogICAgICAgIHZhbHVlOiAna28nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnTGF0dmlhbicsCiAgICAgICAgdmFsdWU6ICdsdicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdNYWxheScsCiAgICAgICAgdmFsdWU6ICdtcycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdOb3J3ZWdpYW4nLAogICAgICAgIHZhbHVlOiAnbm8nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUGVyc2lhbicsCiAgICAgICAgdmFsdWU6ICdmYScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdQYXNodG8nLAogICAgICAgIHZhbHVlOiAncHMnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUG9saXNoJywKICAgICAgICB2YWx1ZTogJ3BsJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1BvcnR1Z3Vlc2UnLAogICAgICAgIHZhbHVlOiAncHQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUm9tYW5pYW4nLAogICAgICAgIHZhbHVlOiAncm8nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUnVzc2lhbicsCiAgICAgICAgdmFsdWU6ICdydScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTZXJiaWFuJywKICAgICAgICB2YWx1ZTogJ3NyJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1Nsb3ZhaycsCiAgICAgICAgdmFsdWU6ICdzaycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTbG92ZW5pYW4nLAogICAgICAgIHZhbHVlOiAnc2wnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnU29tYWxpJywKICAgICAgICB2YWx1ZTogJ3NvJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1NwYW5pc2gnLAogICAgICAgIHZhbHVlOiAnZXMnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnU3dhaGlsaScsCiAgICAgICAgdmFsdWU6ICdzdycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTd2VkaXNoJywKICAgICAgICB2YWx1ZTogJ3N2JwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1RhZ2Fsb2cnLAogICAgICAgIHZhbHVlOiAndGwnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnVGFtaWwnLAogICAgICAgIHZhbHVlOiAndGEnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnVGhhaScsCiAgICAgICAgdmFsdWU6ICd0aCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdUdXJraXNoJywKICAgICAgICB2YWx1ZTogJ3RyJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1VrcmFpbmlhbicsCiAgICAgICAgdmFsdWU6ICd1aycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdVcmR1JywKICAgICAgICB2YWx1ZTogJ3VyJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1ZpZXRuYW1lc2UnLAogICAgICAgIHZhbHVlOiAndmknCiAgICAgIH1dLAogICAgICBzb3VyY2VMYW5ndWFnZUNvZGU6ICJlbiIsCiAgICAgIHRhcmdldExhbmd1YWdlQ29kZTogImVzIiwKICAgICAgdXBsb2FkRXJyb3JNZXNzYWdlOiAiIiwKICAgICAgaW52YWxpZEZpbGVNZXNzYWdlOiAiIiwKICAgICAgaW52YWxpZEZpbGVNZXNzYWdlczogW10sCiAgICAgIHNob3dJbnZhbGlkRmlsZTogZmFsc2UsCiAgICAgIGRpc21pc3NTZWNzOiA4LAogICAgICBkaXNtaXNzQ291bnREb3duOiAwLAogICAgICBleGVjdXRlZF9hc3NldHM6IFtdLAogICAgICB3b3JrZmxvd19zdGF0dXNfcG9sbGluZzogbnVsbCwKICAgICAgd29ya2Zsb3dfY29uZmlnOiB7fSwKICAgICAgZGVzY3JpcHRpb246ICJDbGljayBzdGFydCB0byBiZWdpbi4gTWVkaWEgYW5hbHlzaXMgc3RhdHVzIHdpbGwgYmUgc2hvd24gYWZ0ZXIgdXBsb2FkIGNvbXBsZXRlcy4iLAogICAgICBzM19kZXN0aW5hdGlvbjogJ3MzOi8vJyArIHRoaXMuREFUQVBMQU5FX0JVQ0tFVCwKICAgICAgZHJvcHpvbmVPcHRpb25zOiB7CiAgICAgICAgdXJsOiAnaHR0cHM6Ly8nICsgdGhpcy5EQVRBUExBTkVfQlVDS0VUICsgJy5zMy5hbWF6b25hd3MuY29tJywKICAgICAgICB0aHVtYm5haWxXaWR0aDogMjAwLAogICAgICAgIGFkZFJlbW92ZUxpbmtzOiB0cnVlLAogICAgICAgIGF1dG9Qcm9jZXNzUXVldWU6IGZhbHNlLAogICAgICAgIC8vIGRpc2FibGUgbmV0d29yayB0aW1lb3V0cyAoaW1wb3J0YW50IGZvciBsYXJnZSB1cGxvYWRzKQogICAgICAgIHRpbWVvdXQ6IDAsCiAgICAgICAgLy8gbGltaXQgbWF4IHVwbG9hZCBmaWxlIHNpemUgKGluIE1CKQogICAgICAgIG1heEZpbGVzaXplOiA1MDAwCiAgICAgIH0sCiAgICAgIGF3c3MzOiB7CiAgICAgICAgc2lnbmluZ1VSTDogJycsCiAgICAgICAgaGVhZGVyczoge30sCiAgICAgICAgcGFyYW1zOiB7fQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydleGVjdXRpb25faGlzdG9yeSddKSksIHt9LCB7CiAgICB0ZXh0Rm9ybUVycm9yOiBmdW5jdGlvbiB0ZXh0Rm9ybUVycm9yKCkgewogICAgICByZXR1cm4gIiI7CiAgICB9LAogICAgYXVkaW9Gb3JtRXJyb3I6IGZ1bmN0aW9uIGF1ZGlvRm9ybUVycm9yKCkgewogICAgICAvLyBWYWxpZGF0ZSB0cmFuc2NyaWJlIGlzIGVuYWJsZWQgaWYgYW55IHRleHQgb3BlcmF0b3IgaXMgZW5hYmxlZAogICAgICBpZiAoIXRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiVHJhbnNjcmliZVZpZGVvIikgJiYgKHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiVHJhbnNsYXRlIikgfHwgdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJDb21wcmVoZW5kRW50aXRpZXMiKSB8fCB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoIkNvbXByZWhlbmRLZXlQaHJhc2VzIikpKSB7CiAgICAgICAgcmV0dXJuICJUcmFuc2NyaWJlIG11c3QgYmUgZW5hYmxlZCBpZiBhbnkgdGV4dCBvcGVyYXRvciBpcyBlbmFibGVkLiI7CiAgICAgIH0KCiAgICAgIHJldHVybiAiIjsKICAgIH0sCiAgICB2aWRlb0Zvcm1FcnJvcjogZnVuY3Rpb24gdmlkZW9Gb3JtRXJyb3IoKSB7CiAgICAgIC8vIFZhbGlkYXRlIGZhY2UgY29sbGVjdGlvbiBJRCBpZiBmYWNlIHNlYXJjaCBpcyBlbmFibGVkCiAgICAgIGlmICh0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImZhY2VTZWFyY2giKSkgewogICAgICAgIC8vIFZhbGlkYXRlIHRoYXQgdGhlIGNvbGxlY3Rpb24gSUQgaXMgZGVmaW5lZAogICAgICAgIGlmICh0aGlzLmZhY2VDb2xsZWN0aW9uSWQgPT09ICIiKSB7CiAgICAgICAgICByZXR1cm4gIkZhY2UgY29sbGVjdGlvbiBuYW1lIGlzIHJlcXVpcmVkLiI7CiAgICAgICAgfSAvLyBWYWxpZGF0ZSB0aGF0IHRoZSBjb2xsZWN0aW9uIElEIG1hdGNoZXMgcmVxdWlyZWQgcmVnZXgKICAgICAgICBlbHNlIGlmIChuZXcgUmVnRXhwKCJbXmEtekEtWjAtOV8uXFwtXSIpLnRlc3QodGhpcy5mYWNlQ29sbGVjdGlvbklkKSkgewogICAgICAgICAgcmV0dXJuICJGYWNlIGNvbGxlY3Rpb24gbmFtZSBtdXN0IG1hdGNoIHBhdHRlcm4gW2EtekEtWjAtOV8uXFxcXC1dKyI7CiAgICAgICAgfSAvLyBWYWxpZGF0ZSB0aGF0IHRoZSBjb2xsZWN0aW9uIElEIGlzIG5vdCB0b28gbG9uZwogICAgICAgIGVsc2UgaWYgKHRoaXMuZmFjZUNvbGxlY3Rpb25JZC5sZW5ndGggPiAyNTUpIHsKICAgICAgICAgIHJldHVybiAiRmFjZSBjb2xsZWN0aW9uIG5hbWUgbXVzdCBoYXZlIGZld2VyIHRoYW4gMjU1IGNoYXJhY3RlcnMuIjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImdlbmVyaWNEYXRhTG9va3VwIikpIHsKICAgICAgICAvLyBWYWxpZGF0ZSB0aGF0IHRoZSBjb2xsZWN0aW9uIElEIGlzIGRlZmluZWQKICAgICAgICBpZiAodGhpcy5nZW5lcmljRGF0YUZpbGVuYW1lID09PSAiIikgewogICAgICAgICAgcmV0dXJuICJHZW5lcmljIGRhdGEgZmlsZW5hbWUgaXMgcmVxdWlyZWQuIjsKICAgICAgICB9IC8vIFZhbGlkYXRlIHRoYXQgdGhlIGNvbGxlY3Rpb24gSUQgbWF0Y2hlcyByZXF1aXJlZCByZWdleAogICAgICAgIGVsc2UgaWYgKCFuZXcgUmVnRXhwKCJeLitcXC5qc29uJCIpLnRlc3QodGhpcy5nZW5lcmljRGF0YUZpbGVuYW1lKSkgewogICAgICAgICAgcmV0dXJuICJHZW5lcmljIGRhdGEgZmlsZW5hbWUgbXVzdCBoYXZlIC5qc29uIGV4dGVuc2lvbi4iOwogICAgICAgIH0gLy8gVmFsaWRhdGUgdGhhdCB0aGUgZGF0YSBmaWxlbmFtZSBpcyBub3QgdG9vIGxvbmcKICAgICAgICBlbHNlIGlmICh0aGlzLmdlbmVyaWNEYXRhRmlsZW5hbWUubGVuZ3RoID4gMjU1KSB7CiAgICAgICAgICByZXR1cm4gIkdlbmVyaWMgZGF0YSBmaWxlbmFtZSBtdXN0IGhhdmUgZmV3ZXIgdGhhbiAyNTUgY2hhcmFjdGVycy4iOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuICIiOwogICAgfSwKICAgIHZhbGlkRm9ybTogZnVuY3Rpb24gdmFsaWRGb3JtKCkgewogICAgICB2YXIgdmFsaWRTdGF0dXMgPSB0cnVlOwogICAgICBpZiAodGhpcy5pbnZhbGlkX2ZpbGVfdHlwZXMgfHwgdGhpcy50ZXh0Rm9ybUVycm9yIHx8IHRoaXMuYXVkaW9Gb3JtRXJyb3IgfHwgdGhpcy52aWRlb0Zvcm1FcnJvcikgdmFsaWRTdGF0dXMgPSBmYWxzZTsKICAgICAgcmV0dXJuIHZhbGlkU3RhdHVzOwogICAgfSwKICAgIGltYWdlV29ya2Zsb3dDb25maWc6IGZ1bmN0aW9uIGltYWdlV29ya2Zsb3dDb25maWcoKSB7CiAgICAgIC8vIERlZmluZSB0aGUgaW1hZ2Ugd29ya2Zsb3cgYmFzZWQgb24gdXNlciBzcGVjaWZpZWQgb3B0aW9ucyBmb3Igd29ya2Zsb3cgY29uZmlndXJhdGlvbi4KICAgICAgdmFyIFZhbGlkYXRpb25TdGFnZSA9IHsKICAgICAgICBNZWRpYWluZm9JbWFnZTogewogICAgICAgICAgRW5hYmxlZDogdHJ1ZQogICAgICAgIH0KICAgICAgfTsKICAgICAgdmFyIFJla29nbml0aW9uU3RhZ2UgPSB7CiAgICAgICAgZmFjZVNlYXJjaEltYWdlOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImZhY2VTZWFyY2giKSwKICAgICAgICAgIENvbGxlY3Rpb25JZDogdGhpcy5mYWNlQ29sbGVjdGlvbklkID09PSAiIiA/ICJ1bmRlZmluZWQiIDogdGhpcy5mYWNlQ29sbGVjdGlvbklkCiAgICAgICAgfSwKICAgICAgICBsYWJlbERldGVjdGlvbkltYWdlOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImxhYmVsRGV0ZWN0aW9uIikKICAgICAgICB9LAogICAgICAgIHRleHREZXRlY3Rpb25JbWFnZTogewogICAgICAgICAgRW5hYmxlZDogdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJ0ZXh0RGV0ZWN0aW9uIikKICAgICAgICB9LAogICAgICAgIGNlbGVicml0eVJlY29nbml0aW9uSW1hZ2U6IHsKICAgICAgICAgIEVuYWJsZWQ6IHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiY2VsZWJyaXR5UmVjb2duaXRpb24iKQogICAgICAgIH0sCiAgICAgICAgY29udGVudE1vZGVyYXRpb25JbWFnZTogewogICAgICAgICAgRW5hYmxlZDogdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJjb250ZW50TW9kZXJhdGlvbiIpCiAgICAgICAgfSwKICAgICAgICBmYWNlRGV0ZWN0aW9uSW1hZ2U6IHsKICAgICAgICAgIEVuYWJsZWQ6IHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiZmFjZURldGVjdGlvbiIpCiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgd29ya2Zsb3dfY29uZmlnID0gewogICAgICAgIE5hbWU6ICJDYXNJbWFnZVdvcmtmbG93IgogICAgICB9OwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXSA9IHt9OwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXVsiVmFsaWRhdGlvblN0YWdlIl0gPSBWYWxpZGF0aW9uU3RhZ2U7CiAgICAgIHdvcmtmbG93X2NvbmZpZ1siQ29uZmlndXJhdGlvbiJdWyJSZWtvZ25pdGlvblN0YWdlIl0gPSBSZWtvZ25pdGlvblN0YWdlOwogICAgICByZXR1cm4gd29ya2Zsb3dfY29uZmlnOwogICAgfSwKICAgIHZpZGVvV29ya2Zsb3dDb25maWc6IGZ1bmN0aW9uIHZpZGVvV29ya2Zsb3dDb25maWcoKSB7CiAgICAgIC8vIERlZmluZSB0aGUgdmlkZW8gd29ya2Zsb3cgYmFzZWQgb24gdXNlciBzcGVjaWZpZWQgb3B0aW9ucyBmb3Igd29ya2Zsb3cgY29uZmlndXJhdGlvbi4KICAgICAgdmFyIGRlZmF1bHRQcmVsaW1WaWRlb1N0YWdlID0gewogICAgICAgIFRodW1ibmFpbDogewogICAgICAgICAgVGh1bWJuYWlsUG9zaXRpb246IHRoaXMudGh1bWJuYWlsX3Bvc2l0aW9uLnRvU3RyaW5nKCksCiAgICAgICAgICBFbmFibGVkOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBNZWRpYWluZm86IHsKICAgICAgICAgIEVuYWJsZWQ6IHRydWUKICAgICAgICB9CiAgICAgIH07CiAgICAgIHZhciBkZWZhdWx0VmlkZW9TdGFnZSA9IHsKICAgICAgICBmYWNlRGV0ZWN0aW9uOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImZhY2VEZXRlY3Rpb24iKQogICAgICAgIH0sCiAgICAgICAgdGVjaG5pY2FsQ3VlRGV0ZWN0aW9uOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoInRlY2huaWNhbEN1ZURldGVjdGlvbiIpCiAgICAgICAgfSwKICAgICAgICBzaG90RGV0ZWN0aW9uOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoInNob3REZXRlY3Rpb24iKQogICAgICAgIH0sCiAgICAgICAgY2VsZWJyaXR5UmVjb2duaXRpb246IHsKICAgICAgICAgIEVuYWJsZWQ6IHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiY2VsZWJyaXR5UmVjb2duaXRpb24iKQogICAgICAgIH0sCiAgICAgICAgbGFiZWxEZXRlY3Rpb246IHsKICAgICAgICAgIEVuYWJsZWQ6IHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygibGFiZWxEZXRlY3Rpb24iKQogICAgICAgIH0sCiAgICAgICAgY29udGVudE1vZGVyYXRpb246IHsKICAgICAgICAgIEVuYWJsZWQ6IHRoaXMuZW5hYmxlZE9wZXJhdG9ycy5pbmNsdWRlcygiY29udGVudE1vZGVyYXRpb24iKQogICAgICAgIH0sCiAgICAgICAgZmFjZVNlYXJjaDogewogICAgICAgICAgRW5hYmxlZDogdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJmYWNlU2VhcmNoIiksCiAgICAgICAgICBDb2xsZWN0aW9uSWQ6IHRoaXMuZmFjZUNvbGxlY3Rpb25JZCA9PT0gIiIgPyAidW5kZWZpbmVkIiA6IHRoaXMuZmFjZUNvbGxlY3Rpb25JZAogICAgICAgIH0sCiAgICAgICAgdGV4dERldGVjdGlvbjogewogICAgICAgICAgRW5hYmxlZDogdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJ0ZXh0RGV0ZWN0aW9uIikKICAgICAgICB9LAogICAgICAgIEdlbmVyaWNEYXRhTG9va3VwOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoImdlbmVyaWNEYXRhTG9va3VwIiksCiAgICAgICAgICBCdWNrZXQ6IHRoaXMuREFUQVBMQU5FX0JVQ0tFVCwKICAgICAgICAgIEtleTogdGhpcy5nZW5lcmljRGF0YUZpbGVuYW1lID09PSAiIiA/ICJ1bmRlZmluZWQiIDogdGhpcy5nZW5lcmljRGF0YUZpbGVuYW1lCiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgZGVmYXVsdEF1ZGlvU3RhZ2UgPSB7CiAgICAgICAgVHJhbnNjcmliZVZpZGVvOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoIlRyYW5zY3JpYmVWaWRlbyIpLAogICAgICAgICAgVHJhbnNjcmliZUxhbmd1YWdlOiB0aGlzLnRyYW5zY3JpYmVMYW5ndWFnZQogICAgICAgIH0KICAgICAgfTsKICAgICAgdmFyIGRlZmF1bHRUZXh0U3RhZ2UgPSB7CiAgICAgICAgVHJhbnNsYXRlOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoIlRyYW5zbGF0ZSIpLAogICAgICAgICAgU291cmNlTGFuZ3VhZ2VDb2RlOiB0aGlzLnRyYW5zY3JpYmVMYW5ndWFnZS5zcGxpdCgiLSIpWzBdLAogICAgICAgICAgVGFyZ2V0TGFuZ3VhZ2VDb2RlOiB0aGlzLnRhcmdldExhbmd1YWdlQ29kZQogICAgICAgIH0sCiAgICAgICAgQ29tcHJlaGVuZEVudGl0aWVzOiB7CiAgICAgICAgICBFbmFibGVkOiB0aGlzLmVuYWJsZWRPcGVyYXRvcnMuaW5jbHVkZXMoIkNvbXByZWhlbmRFbnRpdGllcyIpCiAgICAgICAgfSwKICAgICAgICBDb21wcmVoZW5kS2V5UGhyYXNlczogewogICAgICAgICAgRW5hYmxlZDogdGhpcy5lbmFibGVkT3BlcmF0b3JzLmluY2x1ZGVzKCJDb21wcmVoZW5kS2V5UGhyYXNlcyIpCiAgICAgICAgfQogICAgICB9OwoKICAgICAgaWYgKHRoaXMuQ29tcHJlaGVuZEVuY3J5cHRpb24gPT09IHRydWUgJiYgdGhpcy5rbXNLZXlJZC5sZW5ndGggPiAwKSB7CiAgICAgICAgZGVmYXVsdFRleHRTdGFnZVsiQ29tcHJlaGVuZEVudGl0aWVzIl1bIkttc0tleUlkIl0gPSB0aGlzLmttc0tleUlkOwogICAgICAgIGRlZmF1bHRUZXh0U3RhZ2VbIkNvbXByZWhlbmRLZXlQaHJhc2VzIl1bIkttc0tleUlkIl0gPSB0aGlzLmttc0tleUlkOwogICAgICB9CgogICAgICB2YXIgZGVmYXVsdFRleHRTeW50aGVzaXNTdGFnZSA9IHsKICAgICAgICAvLyBQb2xseSBpcyBhdmFpbGFibGUgaW4gdGhlIE1JRUNvbXBsZXRlV29ya2Zsb3cgYnV0IG5vdCB1c2VkIGluIHRoZSBmcm9udC1lbmQsIHNvIHdlJ3ZlIGRpc2FibGVkIGl0IGhlcmUuCiAgICAgICAgUG9sbHk6IHsKICAgICAgICAgIEVuYWJsZWQ6IGZhbHNlCiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgd29ya2Zsb3dfY29uZmlnID0gewogICAgICAgIE5hbWU6ICJDYXNWaWRlb1dvcmtmbG93IgogICAgICB9OwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXSA9IHt9OwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXVsiZGVmYXVsdFByZWxpbVZpZGVvU3RhZ2UiXSA9IGRlZmF1bHRQcmVsaW1WaWRlb1N0YWdlOwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXVsiZGVmYXVsdFZpZGVvU3RhZ2UiXSA9IGRlZmF1bHRWaWRlb1N0YWdlOwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXVsiZGVmYXVsdEF1ZGlvU3RhZ2UiXSA9IGRlZmF1bHRBdWRpb1N0YWdlOwogICAgICB3b3JrZmxvd19jb25maWdbIkNvbmZpZ3VyYXRpb24iXVsiZGVmYXVsdFRleHRTdGFnZSJdID0gZGVmYXVsdFRleHRTdGFnZTsKICAgICAgd29ya2Zsb3dfY29uZmlnWyJDb25maWd1cmF0aW9uIl1bImRlZmF1bHRUZXh0U3ludGhlc2lzU3RhZ2UiXSA9IGRlZmF1bHRUZXh0U3ludGhlc2lzU3RhZ2U7CiAgICAgIHJldHVybiB3b3JrZmxvd19jb25maWc7CiAgICB9LAogICAgY3VybFdvcmtmbG93RXhlY3V0aW9uOiBmdW5jdGlvbiBjdXJsV29ya2Zsb3dFeGVjdXRpb24oKSB7CiAgICAgIC8vIGdldCBjdXJsIGNvbW1hbmQgdG8gcmVxdWVzdCB3b3JrZmxvdyBleGVjdXRpb24KICAgICAgcmV0dXJuICdhd3NzY3VybCAtWCBQT1NUIC0tcmVnaW9uICcgKyB0aGlzLkFXU19SRUdJT04gKyAnIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIC0tZGF0YSBcJycgKyBKU09OLnN0cmluZ2lmeSh0aGlzLndvcmtmbG93Q29uZmlnV2l0aElucHV0KSArICdcJyAnICsgdGhpcy5XT1JLRkxPV19BUElfRU5EUE9JTlQgKyAnd29ya2Zsb3cvZXhlY3V0aW9uJzsKICAgIH0sCiAgICBzYW1wbGVfZmlsZTogZnVuY3Rpb24gc2FtcGxlX2ZpbGUoKSB7CiAgICAgIGlmICh0aGlzLmN1cmxXb3JrZmxvdyA9PT0gIlZpZGVvIikgewogICAgICAgIHJldHVybiAiU0FNUExFX1ZJREVPLk1QNCI7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJsV29ya2Zsb3cgPT09ICJJbWFnZSIpIHsKICAgICAgICByZXR1cm4gIlNBTVBMRV9JTUFHRS5QTkciOwogICAgICB9CiAgICB9LAogICAgY3VybEV4ZWN1dGlvbkhpc3Rvcnk6IGZ1bmN0aW9uIGN1cmxFeGVjdXRpb25IaXN0b3J5KCkgewogICAgICAvLyBnZXQgY3VybCBjb21tYW5kIHRvIHJlcXVlc3QgZXhlY3V0aW9uIGhpc3RvcnkKICAgICAgcmV0dXJuICdhd3NjdXJsIC1YIEdFVCAtLXJlZ2lvbiAnICsgdGhpcy5BV1NfUkVHSU9OICsgJyAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAnICsgdGhpcy5XT1JLRkxPV19BUElfRU5EUE9JTlQgKyAnd29ya2Zsb3cvZXhlY3V0aW9uL2Fzc2V0L3thc3NldF9pZH0nOwogICAgfSwKICAgIHdvcmtmbG93Q29uZmlnV2l0aElucHV0OiBmdW5jdGlvbiB3b3JrZmxvd0NvbmZpZ1dpdGhJbnB1dCgpIHsKICAgICAgLy8gVGhpcyBmdW5jdGlvbiBpcyBqdXN0IHVzZWQgdG8gcHJldHR5IHByaW50IHRoZSByZXN0IGFwaQogICAgICAvLyBmb3Igd29ya2Zsb3cgZXhlY3V0aW9uIGluIGEgcG9wdXAgbW9kYWwKICAgICAgdmFyIGRhdGEgPSB7fTsKCiAgICAgIGlmICh0aGlzLmN1cmxXb3JrZmxvdyA9PT0gIlZpZGVvIikgewogICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMudmlkZW9Xb3JrZmxvd0NvbmZpZykpOwogICAgICAgIGRhdGFbIk5hbWUiXSA9ICJDYXNWaWRlb1dvcmtmbG93IjsKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cmxXb3JrZmxvdyA9PT0gIkltYWdlIikgewogICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuaW1hZ2VXb3JrZmxvd0NvbmZpZykpOwogICAgICAgIGRhdGFbIk5hbWUiXSA9ICJDYXNJbWFnZVdvcmtmbG93IjsKICAgICAgfQoKICAgICAgZGF0YVsiSW5wdXQiXSA9IHsKICAgICAgICAiTWVkaWEiOiB7CiAgICAgICAgICAiVmlkZW8iOiB7CiAgICAgICAgICAgICJTM0J1Y2tldCI6IHRoaXMuREFUQVBMQU5FX0JVQ0tFVCwKICAgICAgICAgICAgIlMzS2V5IjogdGhpcy5zYW1wbGVfZmlsZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9CiAgfSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5hc3NldCkgewogICAgICB0aGlzLmhhc0Fzc2V0UGFyYW0gPSB0cnVlOwogICAgICB0aGlzLmFzc2V0SWRQYXJhbSA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmFzc2V0OwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZXhlY3V0ZWRfYXNzZXRzID0gdGhpcy5leGVjdXRpb25faGlzdG9yeTsKICAgIHRoaXMucG9sbFdvcmtmbG93U3RhdHVzKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLndvcmtmbG93X3N0YXR1c19wb2xsaW5nKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEFsbDogZnVuY3Rpb24gc2VsZWN0QWxsKCkgewogICAgICB0aGlzLmVuYWJsZWRPcGVyYXRvcnMgPSBbImxhYmVsRGV0ZWN0aW9uIiwgInRleHREZXRlY3Rpb24iLCAiY2VsZWJyaXR5UmVjb2duaXRpb24iLCAiY29udGVudE1vZGVyYXRpb24iLCAiZmFjZURldGVjdGlvbiIsICJ0aHVtYm5haWwiLCAiVHJhbnNjcmliZVZpZGVvIiwgIlRyYW5zbGF0ZSIsICJDb21wcmVoZW5kS2V5UGhyYXNlcyIsICJDb21wcmVoZW5kRW50aXRpZXMiLCAidGVjaG5pY2FsQ3VlRGV0ZWN0aW9uIiwgInNob3REZXRlY3Rpb24iXTsKICAgICAgY29uc29sZS5sb2codGhpcy5lbmFibGVkT3BlcmF0b3JzKTsKICAgIH0sCiAgICBjbGVhckFsbDogZnVuY3Rpb24gY2xlYXJBbGwoKSB7CiAgICAgIHRoaXMuZW5hYmxlZE9wZXJhdG9ycyA9IFtdOwogICAgfSwKICAgIG9wZW5XaW5kb3c6IGZ1bmN0aW9uIG9wZW5XaW5kb3codXJsKSB7CiAgICAgIHdpbmRvdy5vcGVuKHVybCwgIm5vb3BlbmVyLG5vcmVmZXJlciIpOwogICAgfSwKICAgIGNvdW50RG93bkNoYW5nZWQ6IGZ1bmN0aW9uIGNvdW50RG93bkNoYW5nZWQoZGlzbWlzc0NvdW50RG93bikgewogICAgICB0aGlzLmRpc21pc3NDb3VudERvd24gPSBkaXNtaXNzQ291bnREb3duOwogICAgfSwKICAgIHMzVXBsb2FkRXJyb3I6IGZ1bmN0aW9uIHMzVXBsb2FkRXJyb3IoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBkaXNwbGF5IGFsZXJ0CgogICAgICB0aGlzLnVwbG9hZEVycm9yTWVzc2FnZSA9IGVycm9yOwogICAgICB0aGlzLmRpc21pc3NDb3VudERvd24gPSB0aGlzLmRpc21pc3NTZWNzOwogICAgfSwKICAgIGZpbGVBZGRlZDogZnVuY3Rpb24gZmlsZUFkZGVkKGZpbGUpIHsKICAgICAgdmFyIGVycm9yTWVzc2FnZSA9ICcnOwoKICAgICAgaWYgKCFmaWxlLnR5cGUubWF0Y2goL2ltYWdlXC8uK3x2aWRlb1wvLit8YXBwbGljYXRpb25cL214ZnxhcHBsaWNhdGlvblwvanNvbi9nKSkgewogICAgICAgIGlmIChmaWxlLnR5cGUgPT09ICIiKSBlcnJvck1lc3NhZ2UgPSAiVW5zdXBwb3J0ZWQgZmlsZSB0eXBlOiB1bmtub3duIjtlbHNlIGVycm9yTWVzc2FnZSA9ICJVbnN1cHBvcnRlZCBmaWxlIHR5cGU6ICIgKyBmaWxlLnR5cGU7CiAgICAgICAgdGhpcy5pbnZhbGlkRmlsZU1lc3NhZ2VzLnB1c2goZXJyb3JNZXNzYWdlKTsKICAgICAgICB0aGlzLnNob3dJbnZhbGlkRmlsZSA9IHRydWU7CiAgICAgIH0KICAgIH0sCiAgICBmaWxlUmVtb3ZlZDogZnVuY3Rpb24gZmlsZVJlbW92ZWQoZmlsZSkgewogICAgICB2YXIgZXJyb3JNZXNzYWdlID0gJyc7CgogICAgICBpZiAoIWZpbGUudHlwZS5tYXRjaCgvaW1hZ2VcLy4rfHZpZGVvXC8uK3xhcHBsaWNhdGlvblwvbXhmfGFwcGxpY2F0aW9uXC9qc29uL2cpKSB7CiAgICAgICAgaWYgKGZpbGUudHlwZSA9PT0gIiIpIGVycm9yTWVzc2FnZSA9ICJVbnN1cHBvcnRlZCBmaWxlIHR5cGU6IHVua25vd24iO2Vsc2UgZXJyb3JNZXNzYWdlID0gIlVuc3VwcG9ydGVkIGZpbGUgdHlwZTogIiArIGZpbGUudHlwZTsKICAgICAgfQoKICAgICAgdGhpcy5pbnZhbGlkRmlsZU1lc3NhZ2VzID0gdGhpcy5pbnZhbGlkRmlsZU1lc3NhZ2VzLmZpbHRlcihmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICByZXR1cm4gdmFsdWUgIT0gZXJyb3JNZXNzYWdlOwogICAgICB9KTsKICAgICAgaWYgKHRoaXMuaW52YWxpZEZpbGVNZXNzYWdlcy5sZW5ndGggPT09IDApIHRoaXMuc2hvd0ludmFsaWRGaWxlID0gZmFsc2U7CiAgICB9LAogICAgcnVuV29ya2Zsb3c6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9ydW5Xb3JrZmxvdyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShmaWxlKSB7CiAgICAgICAgdmFyIHZtLCBtZWRpYV90eXBlLCBzM0tleSwgYXBpTmFtZSwgcGF0aCwgcmVxdWVzdE9wdHMsIHJlc3BvbnNlLCBhc3NldF9pZCwgd2ZfaWQsIGV4ZWN1dGVkX2Fzc2V0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHZtID0gdGhpczsKICAgICAgICAgICAgICAgIG1lZGlhX3R5cGUgPSBudWxsOwogICAgICAgICAgICAgICAgczNLZXkgPSBudWxsOwoKICAgICAgICAgICAgICAgIGlmICgiczNfa2V5IiBpbiBmaWxlKSB7CiAgICAgICAgICAgICAgICAgIG1lZGlhX3R5cGUgPSBmaWxlLnR5cGU7CiAgICAgICAgICAgICAgICAgIHMzS2V5ID0gZmlsZS5zM19rZXk7IC8vIGFkZCBpbiBwdWJsaWMgc2luY2UgYW1wbGlmeSBwcmVwZW5kcyB0aGF0IHRvIGFsbCBrZXlzCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBtZWRpYV90eXBlID0gdGhpcy4kcm91dGUucXVlcnkubWVkaWFUeXBlOwogICAgICAgICAgICAgICAgICBzM0tleSA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnMza2V5LnNwbGl0KCIvIikucG9wKCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc0Fzc2V0UGFyYW0pIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmIChtZWRpYV90eXBlID09PSAidmlkZW8iKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMud29ya2Zsb3dfY29uZmlnID0gdm0udmlkZW9Xb3JrZmxvd0NvbmZpZzsKICAgICAgICAgICAgICAgICAgdGhpcy53b3JrZmxvd19jb25maWdbIklucHV0Il0gPSB7CiAgICAgICAgICAgICAgICAgICAgQXNzZXRJZDogdGhpcy5hc3NldElkUGFyYW0sCiAgICAgICAgICAgICAgICAgICAgTWVkaWE6IHsKICAgICAgICAgICAgICAgICAgICAgIFZpZGVvOiB7fQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobWVkaWFfdHlwZSA9PT0gImltYWdlIikgewogICAgICAgICAgICAgICAgICB0aGlzLndvcmtmbG93X2NvbmZpZyA9IHZtLmltYWdlV29ya2Zsb3dDb25maWc7CiAgICAgICAgICAgICAgICAgIHRoaXMud29ya2Zsb3dfY29uZmlnWyJJbnB1dCJdID0gewogICAgICAgICAgICAgICAgICAgIEFzc2V0SWQ6IHRoaXMuYXNzZXRJZFBhcmFtLAogICAgICAgICAgICAgICAgICAgIE1lZGlhOiB7CiAgICAgICAgICAgICAgICAgICAgICBJbWFnZToge30KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB2bS5zM1VwbG9hZEVycm9yKCJVbnN1cHBvcnRlZCBtZWRpYSB0eXBlLCAiICsgdGhpcy4kcm91dGUucXVlcnkubWVkaWFUeXBlICsgIi4iKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgaWYgKCFtZWRpYV90eXBlLm1hdGNoKC9pbWFnZS9nKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMud29ya2Zsb3dfY29uZmlnID0gdm0uaW1hZ2VXb3JrZmxvd0NvbmZpZzsKICAgICAgICAgICAgICAgIHRoaXMud29ya2Zsb3dfY29uZmlnWyJJbnB1dCJdID0gewogICAgICAgICAgICAgICAgICBNZWRpYTogewogICAgICAgICAgICAgICAgICAgIEltYWdlOiB7CiAgICAgICAgICAgICAgICAgICAgICBTM0J1Y2tldDogdGhpcy5EQVRBUExBTkVfQlVDS0VULAogICAgICAgICAgICAgICAgICAgICAgUzNLZXk6IHMzS2V5CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBpZiAoIShtZWRpYV90eXBlLm1hdGNoKC92aWRlby9nKSB8fCBtZWRpYV90eXBlID09PSAiYXBwbGljYXRpb24vbXhmIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLndvcmtmbG93X2NvbmZpZyA9IHZtLnZpZGVvV29ya2Zsb3dDb25maWc7CiAgICAgICAgICAgICAgICB0aGlzLndvcmtmbG93X2NvbmZpZ1siSW5wdXQiXSA9IHsKICAgICAgICAgICAgICAgICAgTWVkaWE6IHsKICAgICAgICAgICAgICAgICAgICBWaWRlbzogewogICAgICAgICAgICAgICAgICAgICAgUzNCdWNrZXQ6IHRoaXMuREFUQVBMQU5FX0JVQ0tFVCwKICAgICAgICAgICAgICAgICAgICAgIFMzS2V5OiBzM0tleQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgaWYgKCEobWVkaWFfdHlwZSA9PT0gImFwcGxpY2F0aW9uL2pzb24iKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgICAgdm0uczNVcGxvYWRFcnJvcigiVW5zdXBwb3J0ZWQgbWVkaWEgdHlwZTogIiArIG1lZGlhX3R5cGUgKyAiLiIpOwoKICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIndvcmtmbG93IGV4ZWN1dGlvbiBjb25maWd1cmF0aW9uOiIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy53b3JrZmxvd19jb25maWcpKTsKICAgICAgICAgICAgICAgIGFwaU5hbWUgPSAnbWllV29ya2Zsb3dBcGknOwogICAgICAgICAgICAgICAgcGF0aCA9ICd3b3JrZmxvdy9leGVjdXRpb24nOwogICAgICAgICAgICAgICAgcmVxdWVzdE9wdHMgPSB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlOiB0cnVlLAogICAgICAgICAgICAgICAgICBib2R5OiB0aGlzLndvcmtmbG93X2NvbmZpZywKICAgICAgICAgICAgICAgICAgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOiB7fSAvLyBvcHRpb25hbAoKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjg7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzE7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kQW1wbGlmeS5BUEkucG9zdChhcGlOYW1lLCBwYXRoLCByZXF1ZXN0T3B0cyk7CgogICAgICAgICAgICAgIGNhc2UgMzE6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBhc3NldF9pZCA9IHJlc3BvbnNlLmRhdGEuQXNzZXRJZDsKICAgICAgICAgICAgICAgIHdmX2lkID0gcmVzcG9uc2UuZGF0YS5JZDsKICAgICAgICAgICAgICAgIGV4ZWN1dGVkX2Fzc2V0ID0gewogICAgICAgICAgICAgICAgICBhc3NldF9pZDogYXNzZXRfaWQsCiAgICAgICAgICAgICAgICAgIGZpbGVfbmFtZTogczNLZXkucmVwbGFjZSgncHVibGljL3VwbG9hZC8nLCAnJyksCiAgICAgICAgICAgICAgICAgIHdvcmtmbG93X3N0YXR1czogIiIsCiAgICAgICAgICAgICAgICAgIHN0YXRlX21hY2hpbmVfY29uc29sZV9saW5rOiAiIiwKICAgICAgICAgICAgICAgICAgd2ZfaWQ6IHdmX2lkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgdm0uZXhlY3V0ZWRfYXNzZXRzLnB1c2goZXhlY3V0ZWRfYXNzZXQpOwogICAgICAgICAgICAgICAgdm0uZ2V0V29ya2Zsb3dTdGF0dXMod2ZfaWQpOwogICAgICAgICAgICAgICAgdGhpcy5oYXNBc3NldFBhcmFtID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLmFzc2V0SWRQYXJhbSA9ICIiOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ1OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNDE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDI4KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJFUlJPUjogRmFpbGVkIHRvIHN0YXJ0IHdvcmtmbG93LiBDaGVjayBXb3JrZmxvdyBBUEkgbG9ncy4iKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSA0NToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMjgsIDQxXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBydW5Xb3JrZmxvdyhfeCkgewogICAgICAgIHJldHVybiBfcnVuV29ya2Zsb3cuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJ1bldvcmtmbG93OwogICAgfSgpLAogICAgZ2V0V29ya2Zsb3dTdGF0dXM6IGZ1bmN0aW9uIGdldFdvcmtmbG93U3RhdHVzKHdmX2lkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgdm0sIGFwaU5hbWUsIHBhdGgsIHJlcXVlc3RPcHRzLCByZXNwb25zZSwgaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdm0gPSBfdGhpczsKICAgICAgICAgICAgICAgIGFwaU5hbWUgPSAnbWllV29ya2Zsb3dBcGknOwogICAgICAgICAgICAgICAgcGF0aCA9ICJ3b3JrZmxvdy9leGVjdXRpb24vIiArIHdmX2lkOwogICAgICAgICAgICAgICAgcmVxdWVzdE9wdHMgPSB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHt9LAogICAgICAgICAgICAgICAgICByZXNwb25zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOiB7fSAvLyBvcHRpb25hbAoKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJEFtcGxpZnkuQVBJLmdldChhcGlOYW1lLCBwYXRoLCByZXF1ZXN0T3B0cyk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgaWYgKCEoaSA8IHZtLmV4ZWN1dGVkX2Fzc2V0cy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghKHZtLmV4ZWN1dGVkX2Fzc2V0c1tpXS53Zl9pZCA9PT0gd2ZfaWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHZtLmV4ZWN1dGVkX2Fzc2V0c1tpXS53b3JrZmxvd19zdGF0dXMgPSByZXNwb25zZS5kYXRhLlN0YXR1czsKICAgICAgICAgICAgICAgIHZtLmV4ZWN1dGVkX2Fzc2V0c1tpXS5zdGF0ZV9tYWNoaW5lX2NvbnNvbGVfbGluayA9ICJodHRwczovLyIgKyBfdGhpcy5BV1NfUkVHSU9OICsgIi5jb25zb2xlLmF3cy5hbWF6b24uY29tL3N0YXRlcy9ob21lP3JlZ2lvbj0iICsgX3RoaXMuQVdTX1JFR0lPTiArICIjL2V4ZWN1dGlvbnMvZGV0YWlscy8iICsgcmVzcG9uc2UuZGF0YS5TdGF0ZU1hY2hpbmVFeGVjdXRpb25Bcm47CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgiYnJlYWsiLCAxNyk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICAgIF90aGlzLiRzdG9yZS5jb21taXQoInVwZGF0ZUV4ZWN1dGVkQXNzZXRzIiwgdm0uZXhlY3V0ZWRfYXNzZXRzKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDIwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVSUk9SOiBGYWlsZWQgdG8gZ2V0IHdvcmtmbG93IHN0YXR1cyIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1s0LCAyMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcG9sbFdvcmtmbG93U3RhdHVzOiBmdW5jdGlvbiBwb2xsV29ya2Zsb3dTdGF0dXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8gUG9sbCBmcmVxdWVuY3kgaW4gbWlsbGlzZWNvbmRzCiAgICAgIHZhciBwb2xsX2ZyZXF1ZW5jeSA9IDUwMDA7CiAgICAgIHRoaXMud29ya2Zsb3dfc3RhdHVzX3BvbGxpbmcgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmV4ZWN1dGVkX2Fzc2V0cy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBpZiAoaXRlbS53b3JrZmxvd19zdGF0dXMgPT09ICIiIHx8IGl0ZW0ud29ya2Zsb3dfc3RhdHVzID09PSAiU3RhcnRlZCIgfHwgaXRlbS53b3JrZmxvd19zdGF0dXMgPT09ICJRdWV1ZWQiKSB7CiAgICAgICAgICAgIF90aGlzMi5nZXRXb3JrZmxvd1N0YXR1cyhpdGVtLndmX2lkKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSwgcG9sbF9mcmVxdWVuY3kpOwogICAgfSwKICAgIHVwbG9hZEZpbGVzOiBmdW5jdGlvbiB1cGxvYWRGaWxlcygpIHsKICAgICAgY29uc29sZS5sb2coIlVwbG9hZGluZyB0byBzMzovLyIgKyB0aGlzLkRBVEFQTEFORV9CVUNLRVQpOwogICAgICB0aGlzLiRyZWZzLm15VnVlRHJvcHpvbmUucHJvY2Vzc1F1ZXVlKCk7CiAgICB9LAogICAgY2xlYXJIaXN0b3J5OiBmdW5jdGlvbiBjbGVhckhpc3RvcnkoKSB7CiAgICAgIHRoaXMuZXhlY3V0ZWRfYXNzZXRzID0gW107CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlRXhlY3V0ZWRBc3NldHMnLCB0aGlzLmV4ZWN1dGVkX2Fzc2V0cyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["UploadToAWSS3.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Header :is-upload-active=\"true\" />\n    <br>\n    <b-container>\n      <b-alert\n        :show=\"dismissCountDown\"\n        dismissible\n        variant=\"danger\"\n        @dismissed=\"dismissCountDown=0\"\n        @dismiss-count-down=\"countDownChanged\"\n      >\n        {{ uploadErrorMessage }}\n      </b-alert>\n      <b-alert\n        :show=\"showInvalidFile\"\n        variant=\"danger\"\n      >\n        {{ invalidFileMessages[invalidFileMessages.length-1] }}\n      </b-alert>\n      <h1>Upload Content</h1>\n      <p>{{ description }}</p>\n      <vue-dropzone\n        id=\"dropzone\"\n        ref=\"myVueDropzone\"\n        :awss3=\"awss3\"\n        :options=\"dropzoneOptions\"\n        @vdropzone-s3-upload-error=\"s3UploadError\"\n        @vdropzone-file-added=\"fileAdded\"\n        @vdropzone-removed-file=\"fileRemoved\"\n        @vdropzone-success=\"runWorkflow\"\n        @vdropzone-sending=\"upload_in_progress=true\"\n        @vdropzone-queue-complete=\"upload_in_progress=false\"\n      />\n      <br>\n      <b-button v-b-toggle.collapse-2 class=\"m-1\">\n        Configure Workflow\n      </b-button>\n      <b-button v-if=\"validForm && upload_in_progress===false\" variant=\"primary\" @click=\"uploadFiles\">\n        Upload and Run Workflow\n      </b-button>\n      <b-button v-else disabled variant=\"primary\" @click=\"uploadFiles\">\n        Upload and Run Workflow\n      </b-button>\n      <br>\n      <!-- TODO: add a drop-down option in this modal to choose update workflow, then update workflowConfigWithInput to include the appropriate workflow config -->\n      <b-button\n        :pressed=\"false\"\n        size=\"sm\"\n        variant=\"link\"\n        class=\"text-decoration-none\"\n        @click=\"showExecuteApi = true\"\n      >\n        Show API request to run workflow\n      </b-button>\n      <b-modal\n        v-model=\"showExecuteApi\"\n        scrollable\n        title=\"REST API\"\n        ok-only\n      >\n        <label>Workflow Type:</label>\n        <b-form-group>\n          <b-form-radio-group\n              id=\"curlable-workflows\"\n              v-model=\"curlWorkflow\"\n              name=\"curlable-workflows\"\n          >\n          <b-form-radio  value=\"Video\">Video</b-form-radio>\n          <b-form-radio  value=\"Image\">Image</b-form-radio>\n          </b-form-radio-group>\n        </b-form-group>\n        <label>Request URL:</label>\n        <pre v-highlightjs><code class=\"bash\">POST {{ WORKFLOW_API_ENDPOINT }}workflow/execution</code></pre>\n        <label>Request data:</label>\n        <pre v-highlightjs=\"JSON.stringify(workflowConfigWithInput)\"><code class=\"json\"></code></pre>\n        <label>Sample command:</label>\n        <p>Be sure to replace \"{{ sample_file }}\" with the S3 key of an actual file.</p>\n        <pre v-highlightjs=\"curlWorkflowExecution\"><code class=\"bash\"></code></pre>\n      </b-modal>\n      <br>\n      <span v-if=\"upload_in_progress\" class=\"text-secondary\">Upload in progress</span>\n      <b-container v-if=\"upload_in_progress\">\n        <b-spinner label=\"upload_in_progress\" />\n      </b-container>\n      <br>\n      <b-collapse id=\"collapse-2\">\n        <b-container class=\"text-left\">\n          <b-card-group deck>\n            <b-card header=\"Vision Operators\">\n              <b-form-group>\n                <b-form-checkbox-group\n                  id=\"checkbox-group-1\"\n                  v-model=\"enabledOperators\"\n                  :options=\"videoOperators\"\n                  name=\"flavour-1\"\n                ></b-form-checkbox-group>\n                <label>Thumbnail position: </label>\n                <b-form-input v-model=\"thumbnail_position\" type=\"range\" min=\"1\" max=\"20\" step=\"1\"></b-form-input> {{ thumbnail_position }} sec\n                <b-form-input v-if=\"enabledOperators.includes('genericDataLookup')\" id=\"generic_data_filename\" v-model=\"genericDataFilename\" placeholder=\"Enter S3 key for data file\" ></b-form-input>\n                <b-button\n                  v-if=\"enabledOperators.includes('genericDataLookup')\"\n                  :pressed=\"false\"\n                  size=\"sm\"\n                  variant=\"link\"\n                  class=\"text-decoration-none\"\n                  @click=\"showGenericOperatorHelp = true\"\n                >\n                  How do I use generic data?\n                </b-button>\n                <b-modal\n                  v-model=\"showGenericOperatorHelp\"\n                  scrollable\n                  title=\"Using generic metadata\"\n                  ok-only\n                >\n                  This option allows you to use a precomputed JSON dataset as metadata for a video. The file must be located in <code>s3://{{ DATAPLANE_BUCKET }}/</code>. Specify the S3 key for your JSON file in the workflow configuration form.\n                  <br><br>\n                  You may upload json files alongside media files on this page. In that case, enter <code>public/upload/[filename.json]</code> as the S3 key for the data file.\n                  <br><br>\n                  The <code>generic_data_lookup.py</code> operator loads the specified JSON data into the asset metadata table in DynamoDB. It requires that the JSON data be a dict, not a list. Don't forget to extend the OpenSearch (aka Elasticsearch) consumer (source/consumer/lambda_handler.py) if you want the generic data to be indexed so it can be searchable and rendered in this front-end application.\n                </b-modal>\n\n                <b-form-input v-if=\"enabledOperators.includes('faceSearch')\" id=\"face_collection_id\" v-model=\"faceCollectionId\" placeholder=\"Enter face collection id\"></b-form-input>\n              </b-form-group>\n              <div v-if=\"videoFormError\" style=\"color:red\">\n                {{ videoFormError }}\n              </div>\n            </b-card>\n            <b-card header=\"Audio Operators\">\n              <b-form-group>\n                <b-form-checkbox-group\n                  id=\"checkbox-group-2\"\n                  v-model=\"enabledOperators\"\n                  :options=\"audioOperators\"\n                  name=\"flavour-2\"\n                ></b-form-checkbox-group>\n                <div v-if=\"enabledOperators.includes('Transcribe')\">\n                  <label>Source Language</label>\n                  <b-form-select v-model=\"transcribeLanguage\" :options=\"transcribeLanguages\"></b-form-select>\n                </div>\n              </b-form-group>\n              <div v-if=\"audioFormError\" style=\"color:red\">\n                {{ audioFormError }}\n              </div>\n            </b-card>\n            <b-card header=\"Text Operators\">\n              <b-form-group>\n                <b-form-checkbox-group\n                  id=\"checkbox-group-3\"\n                  v-model=\"enabledOperators\"\n                  :options=\"textOperators\"\n                  name=\"flavour-3\"\n                ></b-form-checkbox-group>\n                <div v-if=\"enabledOperators.includes('Translate')\">\n                  <label>Translation Source Language</label>\n                  <b-form-select v-model=\"transcribeLanguage\" :options=\"transcribeLanguages\"></b-form-select>\n                  <label>Translation Target Language</label>\n                  <b-form-select v-model=\"targetLanguageCode\" :options=\"translateLanguages\"></b-form-select>\n                </div>\n                <b-form-checkbox\n                  v-if=\"enabledOperators.includes('ComprehendEntities') || enabledOperators.includes('ComprehendKeyPhrases')\"\n                  v-model=\"ComprehendEncryption\"\n                >\n                  Encrypt Comprehend job\n                </b-form-checkbox>\n                <b-form-input\n                  v-if=\"ComprehendEncryption && (enabledOperators.includes('ComprehendEntities') || enabledOperators.includes('ComprehendKeyPhrases'))\"\n                  v-model=\"kmsKeyId\"\n                  placeholder=\"Enter KMS key ID\"\n                ></b-form-input>\n              </b-form-group>\n              <div v-if=\"textFormError\" style=\"color:red\">\n                {{ textFormError }}\n              </div>\n            </b-card>\n          </b-card-group>\n          <div align=\"right\">\n            <button type=\"button\" class=\"btn btn-link\" @click=\"selectAll\">\n              Select All\n            </button>\n            <button type=\"button\" class=\"btn btn-link\" @click=\"clearAll\">\n              Clear All\n            </button>\n          </div>\n        </b-container>\n      </b-collapse>\n    </b-container>\n    <b-container v-if=\"executed_assets.length > 0\">\n      <label>\n        Execution History\n      </label>\n      <b-table\n        :fields=\"fields\"\n        bordered\n        hover\n        small\n        responsive\n        show-empty\n        fixed\n        :items=\"executed_assets\"\n      >\n        <template #cell(workflow_status)=\"data\">\n          <a v-if=\"data.item.workflow_status !== 'Queued'\" href=\"\" @click.stop.prevent=\"openWindow(data.item.state_machine_console_link)\">{{ data.item.workflow_status }}</a>\n          <div v-if=\"data.item.workflow_status === 'Queued'\">\n            {{ data.item.workflow_status }}\n          </div>\n        </template>\n      </b-table>\n      <b-button size=\"sm\" @click=\"clearHistory\">\n        Clear History\n      </b-button>\n      <br>\n      <b-button\n        :pressed=\"false\"\n        size=\"sm\"\n        variant=\"link\"\n        class=\"text-decoration-none\"\n        @click=\"showWorkflowStatusApi = true\"\n      >\n        Show API request to get execution history\n      </b-button>\n      <b-modal\n        v-model=\"showWorkflowStatusApi\"\n        title=\"REST API\"\n        ok-only\n      >\n        <label>Request URL:</label>\n        <pre v-highlightjs><code class=\"bash\">GET {{ WORKFLOW_API_ENDPOINT }}workflow/execution/asset/{asset_id}</code></pre>\n        <label>Sample command:</label>\n        <p>Be sure to replace <b>{asset_id}</b> with a valid asset ID.</p>\n        <pre v-highlightjs=\"curlExecutionHistory\"><code class=\"bash\"></code></pre>\n      </b-modal>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport vueDropzone from '@/components/vue-dropzone.vue';\nimport Header from '@/components/Header.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    vueDropzone,\n    Header\n  },\n  data() {\n    return {\n      restApi2: '',\n      curlWorkflow: 'Video',\n      curlWorkflowTypes: [\"Image\", \"Video\"],\n      showWorkflowStatusApi: false,\n      showExecuteApi: false,\n      showGenericOperatorHelp: false,\n      requestURL: \"\",\n      requestBody: \"\",\n      requestType: \"\",\n      fields: [\n        {\n          'asset_id': {\n            label: \"Asset Id\",\n            sortable: false\n          }\n        },\n        {\n          'file_name': {\n            label: \"File Name\",\n            sortable: false\n          }\n        },\n        { 'workflow_status': {\n            label: 'Workflow Status',\n            sortable: false\n          }\n        }\n      ],\n      thumbnail_position: 10,\n      invalid_file_types: 0,\n      upload_in_progress: false,\n      enabledOperators: [\n        \"labelDetection\",\n        \"celebrityRecognition\",\n        \"textDetection\",\n        \"contentModeration\",\n        \"faceDetection\",\n        \"thumbnail\",\n        \"TranscribeVideo\",\n        \"Translate\",\n        \"ComprehendKeyPhrases\",\n        \"ComprehendEntities\",\n        \"shotDetection\",\n        \"technicalCueDetection\"\n      ],\n      videoOperators: [\n        { text: \"Object Detection\", value: \"labelDetection\" },\n        { text: \"Technical Cue Detection\", value: \"technicalCueDetection\" },\n        { text: \"Shot Detection\", value: \"shotDetection\" },\n        { text: \"Celebrity Recognition\", value: \"celebrityRecognition\" },\n        { text: \"Content Moderation\", value: \"contentModeration\" },\n        { text: \"Face Detection\", value: \"faceDetection\" },\n        { text: \"Word Detection\", value: \"textDetection\" },\n        { text: \"Face Search\", value: \"faceSearch\" },\n        { html: \"Generic Data Lookup\", value: \"genericDataLookup\" },\n      ],\n      audioOperators: [{ text: \"Transcribe\", value: \"TranscribeVideo\" }],\n      textOperators: [\n        { text: \"Comprehend Key Phrases\", value: \"ComprehendKeyPhrases\" },\n        { text: \"Comprehend Entities\", value: \"ComprehendEntities\" },\n        { text: \"Translate\", value: \"Translate\" }\n      ],\n      faceCollectionId: \"\",\n      genericDataFilename: \"\",\n      ComprehendEncryption: false,\n      kmsKeyId: \"\",\n      transcribeLanguage: \"en-US\",\n      transcribeLanguages: [\n        {text: 'Arabic, Gulf', value: 'ar-AE'},\n        {text: 'Arabic, Modern Standard', value: 'ar-SA'},\n        {text: 'Chinese Mandarin', value: 'zh-CN'},\n        {text: 'Dutch', value: 'nl-NL'},\n        {text: 'English, Australian', value: 'en-AU'},\n        {text: 'English, British', value: 'en-GB'},\n        {text: 'English, Indian-accented', value: 'en-IN'},\n        {text: 'English, Irish', value: 'en-IE'},\n        {text: 'English, Scottish', value: 'en-AB'},\n        {text: 'English, US', value: 'en-US'},\n        {text: 'English, Welsh', value: 'en-WL'},\n        // Disabled until 'fa' supported by AWS Translate\n        // {text: 'Farsi', value: 'fa-IR'},\n        {text: 'French', value: 'fr-FR'},\n        {text: 'French, Canadian', value: 'fr-CA'},\n        {text: 'German', value: 'de-DE'},\n        {text: 'German, Swiss', value: 'de-CH'},\n        {text: 'Hebrew', value: 'he-IL'},\n        {text: 'Hindi', value: 'hi-IN'},\n        {text: 'Indonesian', value: 'id-ID'},\n        {text: 'Italian', value: 'it-IT'},\n        {text: 'Japanese', value: 'ja-JP'},\n        {text: 'Korean', value: 'ko-KR'},\n        {text: 'Malay', value: 'ms-MY'},\n        {text: 'Portuguese', value: 'pt-PT'},\n        {text: 'Portuguese, Brazilian', value: 'pt-BR'},\n        {text: 'Russian', value: 'ru-RU'},\n        {text: 'Spanish', value: 'es-ES'},\n        {text: 'Spanish, US', value: 'es-US'},\n        {text: 'Tamil', value: 'ta-IN'},\n        // Disabled until 'te' supported by AWS Translate\n        // {text: 'Telugu', value: 'te-IN'},\n        {text: 'Turkish', value: 'tr-TR'},\n      ],\n      translateLanguages: [\n        {text: 'Afrikaans', value: 'af'},\n        {text: 'Albanian', value: 'sq'},\n        {text: 'Amharic', value: 'am'},\n        {text: 'Arabic', value: 'ar'},\n        {text: 'Azerbaijani', value: 'az'},\n        {text: 'Bengali', value: 'bn'},\n        {text: 'Bosnian', value: 'bs'},\n        {text: 'Bulgarian', value: 'bg'},\n        {text: 'Chinese (Simplified)', value: 'zh'},\n        // AWS Translate does not support translating from zh to zh-TW\n        // {text: 'Chinese (Traditional)', value: 'zh-TW'},\n        {text: 'Croatian', value: 'hr'},\n        {text: 'Czech', value: 'cs'},\n        {text: 'Danish', value: 'da'},\n        {text: 'Dari', value: 'fa-AF'},\n        {text: 'Dutch', value: 'nl'},\n        {text: 'English', value: 'en'},\n        {text: 'Estonian', value: 'et'},\n        {text: 'Finnish', value: 'fi'},\n        {text: 'French', value: 'fr'},\n        {text: 'French (Canadian)', value: 'fr-CA'},\n        {text: 'Georgian', value: 'ka'},\n        {text: 'German', value: 'de'},\n        {text: 'Greek', value: 'el'},\n        {text: 'Hausa', value: 'ha'},\n        {text: 'Hebrew', value: 'he'},\n        {text: 'Hindi', value: 'hi'},\n        {text: 'Hungarian', value: 'hu'},\n        {text: 'Indonesian', value: 'id'},\n        {text: 'Italian', value: 'it'},\n        {text: 'Japanese', value: 'ja'},\n        {text: 'Korean', value: 'ko'},\n        {text: 'Latvian', value: 'lv'},\n        {text: 'Malay', value: 'ms'},\n        {text: 'Norwegian', value: 'no'},\n        {text: 'Persian', value: 'fa'},\n        {text: 'Pashto', value: 'ps'},\n        {text: 'Polish', value: 'pl'},\n        {text: 'Portuguese', value: 'pt'},\n        {text: 'Romanian', value: 'ro'},\n        {text: 'Russian', value: 'ru'},\n        {text: 'Serbian', value: 'sr'},\n        {text: 'Slovak', value: 'sk'},\n        {text: 'Slovenian', value: 'sl'},\n        {text: 'Somali', value: 'so'},\n        {text: 'Spanish', value: 'es'},\n        {text: 'Swahili', value: 'sw'},\n        {text: 'Swedish', value: 'sv'},\n        {text: 'Tagalog', value: 'tl'},\n        {text: 'Tamil', value: 'ta'},\n        {text: 'Thai', value: 'th'},\n        {text: 'Turkish', value: 'tr'},\n        {text: 'Ukrainian', value: 'uk'},\n        {text: 'Urdu', value: 'ur'},\n        {text: 'Vietnamese', value: 'vi'},\n      ],\n      sourceLanguageCode: \"en\",\n      targetLanguageCode: \"es\",\n      uploadErrorMessage: \"\",\n      invalidFileMessage: \"\",\n      invalidFileMessages: [],\n      showInvalidFile: false,\n      dismissSecs: 8,\n      dismissCountDown: 0,\n      executed_assets: [],\n      workflow_status_polling: null,\n      workflow_config: {},\n      description: \"Click start to begin. Media analysis status will be shown after upload completes.\",\n      s3_destination: 's3://' + this.DATAPLANE_BUCKET,\n      dropzoneOptions: {\n        url: 'https://' + this.DATAPLANE_BUCKET + '.s3.amazonaws.com',\n        thumbnailWidth: 200,\n        addRemoveLinks: true,\n        autoProcessQueue: false,\n        // disable network timeouts (important for large uploads)\n        timeout: 0,\n        // limit max upload file size (in MB)\n        maxFilesize: 5000,\n      },\n      awss3: {\n        signingURL: '',\n        headers: {},\n        params: {}\n      }\n    }\n  },\n  computed: {\n    ...mapState(['execution_history']),\n    textFormError() {\n      return \"\";\n    },\n    audioFormError() {\n      // Validate transcribe is enabled if any text operator is enabled\n      if (\n          !this.enabledOperators.includes(\"TranscribeVideo\") &&\n          (this.enabledOperators.includes(\"Translate\") ||\n              this.enabledOperators.includes(\"ComprehendEntities\") ||\n              this.enabledOperators.includes(\"ComprehendKeyPhrases\"))\n      ) {\n        return \"Transcribe must be enabled if any text operator is enabled.\";\n      }\n      return \"\";\n    },\n    videoFormError() {\n      // Validate face collection ID if face search is enabled\n      if (this.enabledOperators.includes(\"faceSearch\")) {\n        // Validate that the collection ID is defined\n        if (this.faceCollectionId === \"\") {\n          return \"Face collection name is required.\";\n        }\n        // Validate that the collection ID matches required regex\n        else if (new RegExp(\"[^a-zA-Z0-9_.\\\\-]\").test(this.faceCollectionId)) {\n          return \"Face collection name must match pattern [a-zA-Z0-9_.\\\\\\\\-]+\";\n        }\n        // Validate that the collection ID is not too long\n        else if (this.faceCollectionId.length > 255) {\n          return \"Face collection name must have fewer than 255 characters.\";\n        }\n      }\n      if (this.enabledOperators.includes(\"genericDataLookup\")) {\n        // Validate that the collection ID is defined\n        if (this.genericDataFilename === \"\") {\n          return \"Generic data filename is required.\";\n        }\n        // Validate that the collection ID matches required regex\n        else if (!new RegExp(\"^.+\\\\.json$\").test(this.genericDataFilename)) {\n          return \"Generic data filename must have .json extension.\";\n        }\n        // Validate that the data filename is not too long\n        else if (this.genericDataFilename.length > 255) {\n          return \"Generic data filename must have fewer than 255 characters.\";\n        }\n      }\n      return \"\";\n    },\n    validForm() {\n      let validStatus = true;\n      if (\n          this.invalid_file_types ||\n          this.textFormError ||\n          this.audioFormError ||\n          this.videoFormError\n      )\n        validStatus = false;\n      return validStatus;\n    },\n    imageWorkflowConfig() {\n      // Define the image workflow based on user specified options for workflow configuration.\n      const ValidationStage = {\n        MediainfoImage: {\n          Enabled: true\n        }\n      }\n      const RekognitionStage = {\n        faceSearchImage: {\n          Enabled: this.enabledOperators.includes(\"faceSearch\"),\n          CollectionId:\n              this.faceCollectionId === \"\"\n                  ? \"undefined\"\n                  : this.faceCollectionId\n        },\n        labelDetectionImage: {\n          Enabled: this.enabledOperators.includes(\"labelDetection\")\n        },\n        textDetectionImage: {\n          Enabled: this.enabledOperators.includes(\"textDetection\")\n        },\n        celebrityRecognitionImage: {\n          Enabled: this.enabledOperators.includes(\n              \"celebrityRecognition\"\n          )\n        },\n        contentModerationImage: {\n          Enabled: this.enabledOperators.includes(\"contentModeration\")\n        },\n        faceDetectionImage: {\n          Enabled: this.enabledOperators.includes(\"faceDetection\")\n        }\n      }\n      const workflow_config = {\n        Name: \"CasImageWorkflow\",\n      }\n      workflow_config[\"Configuration\"] = {}\n      workflow_config[\"Configuration\"][\"ValidationStage\"] = ValidationStage\n      workflow_config[\"Configuration\"][\"RekognitionStage\"] = RekognitionStage\n      return workflow_config\n    },\n    videoWorkflowConfig() {\n      // Define the video workflow based on user specified options for workflow configuration.\n      const defaultPrelimVideoStage = {\n        Thumbnail: {\n          ThumbnailPosition: this.thumbnail_position.toString(),\n          Enabled: true\n        },\n        Mediainfo: {\n          Enabled: true\n        }\n      }\n      const defaultVideoStage = {\n        faceDetection: {\n          Enabled: this.enabledOperators.includes(\"faceDetection\")\n        },\n        technicalCueDetection: {\n          Enabled: this.enabledOperators.includes(\"technicalCueDetection\")\n        },\n        shotDetection: {\n          Enabled: this.enabledOperators.includes(\"shotDetection\")\n        },\n        celebrityRecognition: {\n          Enabled: this.enabledOperators.includes(\"celebrityRecognition\")\n        },\n        labelDetection: {\n          Enabled: this.enabledOperators.includes(\"labelDetection\")\n        },\n        contentModeration: {\n          Enabled: this.enabledOperators.includes(\"contentModeration\")\n        },\n        faceSearch: {\n          Enabled: this.enabledOperators.includes(\"faceSearch\"),\n          CollectionId:\n              this.faceCollectionId === \"\"\n                  ? \"undefined\"\n                  : this.faceCollectionId\n        },\n        textDetection: {\n          Enabled: this.enabledOperators.includes(\"textDetection\")\n        },\n        GenericDataLookup: {\n          Enabled: this.enabledOperators.includes(\"genericDataLookup\"),\n          Bucket: this.DATAPLANE_BUCKET,\n          Key:\n              this.genericDataFilename === \"\"\n                  ? \"undefined\"\n                  : this.genericDataFilename\n        }\n      }\n      const defaultAudioStage = {\n        TranscribeVideo: {\n          Enabled: this.enabledOperators.includes(\"TranscribeVideo\"),\n          TranscribeLanguage: this.transcribeLanguage\n        }\n      }\n      const defaultTextStage = {\n        Translate: {\n          Enabled: this.enabledOperators.includes(\"Translate\"),\n          SourceLanguageCode: this.transcribeLanguage.split(\"-\")[0],\n          TargetLanguageCode: this.targetLanguageCode\n        },\n        ComprehendEntities: {\n          Enabled: this.enabledOperators.includes(\"ComprehendEntities\")\n        },\n        ComprehendKeyPhrases: {\n          Enabled: this.enabledOperators.includes(\"ComprehendKeyPhrases\")\n        }\n      }\n      if (this.ComprehendEncryption === true && this.kmsKeyId.length > 0) {\n        defaultTextStage[\"ComprehendEntities\"][\"KmsKeyId\"] = this.kmsKeyId\n        defaultTextStage[\"ComprehendKeyPhrases\"][\"KmsKeyId\"] = this.kmsKeyId\n      }\n      const defaultTextSynthesisStage = {\n        // Polly is available in the MIECompleteWorkflow but not used in the front-end, so we've disabled it here.\n        Polly: {\n          Enabled: false\n        }\n      }\n      const workflow_config = {\n        Name: \"CasVideoWorkflow\",\n      }\n      workflow_config[\"Configuration\"] = {}\n      workflow_config[\"Configuration\"][\"defaultPrelimVideoStage\"] = defaultPrelimVideoStage\n      workflow_config[\"Configuration\"][\"defaultVideoStage\"] = defaultVideoStage\n      workflow_config[\"Configuration\"][\"defaultAudioStage\"] = defaultAudioStage\n      workflow_config[\"Configuration\"][\"defaultTextStage\"] = defaultTextStage\n      workflow_config[\"Configuration\"][\"defaultTextSynthesisStage\"] = defaultTextSynthesisStage\n      return workflow_config\n    },\n    curlWorkflowExecution() {\n      // get curl command to request workflow execution\n      return 'awsscurl -X POST --region '+ this.AWS_REGION +' -H \"Content-Type: application/json\" --data \\''+JSON.stringify(this.workflowConfigWithInput)+'\\' '+this.WORKFLOW_API_ENDPOINT+'workflow/execution'\n    },\n    sample_file() {\n      if (this.curlWorkflow === \"Video\") {\n        return \"SAMPLE_VIDEO.MP4\"\n      }\n      else if (this.curlWorkflow === \"Image\") {\n        return \"SAMPLE_IMAGE.PNG\"\n      }\n    },\n    curlExecutionHistory() {\n      // get curl command to request execution history\n      return 'awscurl -X GET --region '+ this.AWS_REGION +' -H \"Content-Type: application/json\" '+this.WORKFLOW_API_ENDPOINT+'workflow/execution/asset/{asset_id}'\n    },\n    workflowConfigWithInput() {\n      // This function is just used to pretty print the rest api\n      // for workflow execution in a popup modal\n      let data = {}\n      if (this.curlWorkflow === \"Video\") {\n        data = JSON.parse(JSON.stringify(this.videoWorkflowConfig));\n        data[\"Name\"] = \"CasVideoWorkflow\"\n      }\n      else if (this.curlWorkflow === \"Image\") {\n        data = JSON.parse(JSON.stringify(this.imageWorkflowConfig));\n        data[\"Name\"] = \"CasImageWorkflow\"\n      }\n      data[\"Input\"] = {\n        \"Media\": {\n          \"Video\": {\n            \"S3Bucket\": this.DATAPLANE_BUCKET,\n            \"S3Key\": this.sample_file\n          }\n        }\n      }\n      return data\n    }\n  },\n  created: function() {\n    if (this.$route.query.asset) {\n      this.hasAssetParam = true;\n      this.assetIdParam = this.$route.query.asset;\n    }\n  },\n  mounted: function() {\n    this.executed_assets = this.execution_history;\n    this.pollWorkflowStatus();\n  },\n  beforeDestroy () {\n    clearInterval(this.workflow_status_polling)\n  },\n  methods: {\n    selectAll: function() {\n      this.enabledOperators = [\n        \"labelDetection\",\n        \"textDetection\",\n        \"celebrityRecognition\",\n        \"contentModeration\",\n        \"faceDetection\",\n        \"thumbnail\",\n        \"TranscribeVideo\",\n        \"Translate\",\n        \"ComprehendKeyPhrases\",\n        \"ComprehendEntities\",\n        \"technicalCueDetection\",\n        \"shotDetection\"\n      ];\n      console.log(this.enabledOperators)\n    },\n    clearAll: function() {\n      this.enabledOperators = [];\n    },\n    openWindow: function(url) {\n      window.open(url, \"noopener,noreferer\");\n    },\n    countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    s3UploadError(error) {\n      console.log(error);\n      // display alert\n      this.uploadErrorMessage = error;\n      this.dismissCountDown = this.dismissSecs;\n    },\n    fileAdded: function( file )\n    {\n      let errorMessage = '';\n      if (!(file.type).match(/image\\/.+|video\\/.+|application\\/mxf|application\\/json/g)) {\n        if (file.type === \"\")\n          errorMessage = \"Unsupported file type: unknown\";\n        else\n          errorMessage = \"Unsupported file type: \" + file.type;\n        this.invalidFileMessages.push(errorMessage);\n        this.showInvalidFile = true\n      }\n    },\n    fileRemoved: function( file )\n    {\n      let errorMessage = '';\n      if (!(file.type).match(/image\\/.+|video\\/.+|application\\/mxf|application\\/json/g)) {\n        if (file.type === \"\")\n          errorMessage = \"Unsupported file type: unknown\";\n        else\n          errorMessage = \"Unsupported file type: \" + file.type;\n      }\n      this.invalidFileMessages = this.invalidFileMessages.filter(function(value){ return value != errorMessage})\n      if (this.invalidFileMessages.length === 0 ) this.showInvalidFile = false;\n    },\n    runWorkflow: async function(file) {\n      const vm = this;\n      let media_type = null;\n      let s3Key = null;\n      if (\"s3_key\" in file) {\n        media_type = file.type;\n        s3Key = file.s3_key; // add in public since amplify prepends that to all keys\n      } else {\n        media_type = this.$route.query.mediaType;\n        s3Key = this.$route.query.s3key.split(\"/\").pop();\n      }\n      if (this.hasAssetParam) {\n        if (media_type === \"video\") {\n          this.workflow_config = vm.videoWorkflowConfig;\n          this.workflow_config[\"Input\"] = { AssetId: this.assetIdParam, Media: { Video: {} } };\n        } else if (media_type === \"image\") {\n          this.workflow_config = vm.imageWorkflowConfig;\n          this.workflow_config[\"Input\"] = { AssetId: this.assetIdParam, Media: { Image: {} } };\n        } else {\n          vm.s3UploadError(\n              \"Unsupported media type, \" + this.$route.query.mediaType + \".\"\n          );\n        }\n      } else {\n        if (media_type.match(/image/g)) {\n          this.workflow_config = vm.imageWorkflowConfig;\n          this.workflow_config[\"Input\"] = {\n            Media: {\n              Image: {\n                S3Bucket: this.DATAPLANE_BUCKET,\n                S3Key: s3Key\n              }\n            }\n          }\n        } else if (\n            media_type.match(/video/g) || media_type === \"application/mxf\"\n        ) {\n          this.workflow_config = vm.videoWorkflowConfig;\n          this.workflow_config[\"Input\"] = {\n            Media: {\n              Video: {\n                S3Bucket: this.DATAPLANE_BUCKET,\n                S3Key: s3Key\n              }\n            }\n          };\n        } else if (media_type === \"application/json\") {\n          // JSON files may be uploaded for the genericDataLookup operator, but\n          // we won't run a workflow for json file types.\n          //console.log(\"Data file has been uploaded to s3://\" + location.s3ObjectLocation.fields.key);\n          return;\n        } else {\n          vm.s3UploadError(\"Unsupported media type: \" + media_type + \".\");\n        }\n      }\n      console.log(\"workflow execution configuration:\")\n      console.log(JSON.stringify(this.workflow_config))\n      let apiName = 'mieWorkflowApi'\n      let path = 'workflow/execution'\n      let requestOpts = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        response: true,\n        body: this.workflow_config,\n        queryStringParameters: {} // optional\n      };\n      try {\n        let response = await this.$Amplify.API.post(apiName, path, requestOpts);\n        let asset_id = response.data.AssetId;\n        let wf_id = response.data.Id;\n        let executed_asset = {\n          asset_id: asset_id,\n          file_name: s3Key.replace('public/upload/', ''),\n          workflow_status: \"\",\n          state_machine_console_link: \"\",\n          wf_id: wf_id\n        };\n        vm.executed_assets.push(executed_asset);\n        vm.getWorkflowStatus(wf_id);\n        this.hasAssetParam = false;\n        this.assetIdParam = \"\";\n      } catch (error) {\n        console.log(\n            \"ERROR: Failed to start workflow. Check Workflow API logs.\"\n        );\n        console.log(error)\n      }\n    },\n    async getWorkflowStatus(wf_id) {\n      const vm = this;\n      let apiName = 'mieWorkflowApi'\n      let path =  \"workflow/execution/\" + wf_id\n      let requestOpts = {\n        headers: {},\n        response: true,\n        queryStringParameters: {} // optional\n      };\n      try {\n        let response = await this.$Amplify.API.get(apiName, path, requestOpts);\n        for (let i = 0; i < vm.executed_assets.length; i++) {\n          if (vm.executed_assets[i].wf_id === wf_id) {\n            vm.executed_assets[i].workflow_status = response.data.Status;\n            vm.executed_assets[i].state_machine_console_link =\n                \"https://\" + this.AWS_REGION + \".console.aws.amazon.com/states/home?region=\" + this.AWS_REGION + \"#/executions/details/\" + response.data.StateMachineExecutionArn;\n            break;\n          }\n        }\n        this.$store.commit(\"updateExecutedAssets\", vm.executed_assets);\n      } catch (error) {\n        console.log(\"ERROR: Failed to get workflow status\");\n        console.log(error)\n      }\n    },\n    pollWorkflowStatus() {\n      // Poll frequency in milliseconds\n      const poll_frequency = 5000;\n      this.workflow_status_polling = setInterval(() => {\n        this.executed_assets.forEach(item => {\n          if (\n              item.workflow_status === \"\" ||\n              item.workflow_status === \"Started\" ||\n              item.workflow_status === \"Queued\"\n          ) {\n            this.getWorkflowStatus(item.wf_id);\n          }\n        });\n      }, poll_frequency);\n    },\n    uploadFiles() {\n      console.log(\"Uploading to s3://\" + this.DATAPLANE_BUCKET,);\n      this.$refs.myVueDropzone.processQueue();\n    },\n    clearHistory() {\n      this.executed_assets = [];\n      this.$store.commit('updateExecutedAssets', this.executed_assets);\n\n    }\n  }\n}\n</script>\n<style>\ninput[type=text] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n}\n\nlabel {\n  font-weight: bold;\n}\n\n.note {\n  color: red;\n  font-family: \"Courier New\"\n}\n</style>\n"],"sourceRoot":"src/views"}]}