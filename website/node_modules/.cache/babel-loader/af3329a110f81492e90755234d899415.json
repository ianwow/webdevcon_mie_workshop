{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendKeyPhrases.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendKeyPhrases.vue","mtime":1623875433270},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pYW53b3cvZGV2ZWxvcG1lbnQvYXdzLWNvbnRlbnQtYW5hbHlzaXMvc291cmNlL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvaWFud293L2RldmVsb3BtZW50L2F3cy1jb250ZW50LWFuYWx5c2lzL3NvdXJjZS93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTG9hZGluZyBmcm9tICdAL2NvbXBvbmVudHMvTG9hZGluZy52dWUnOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIktleVBocmFzZXMiLAogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmc6IExvYWRpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBDb25maWRlbmNlOiA5MCwKICAgICAgc29ydEJ5OiAiQmVnaW5PZmZzZXQiLAogICAgICBmaWVsZHM6IFt7CiAgICAgICAga2V5OiAnUGhyYXNlVGV4dCcsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdDb25maWRlbmNlJywKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAnQmVnaW5PZmZzZXQnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdFbmRPZmZzZXQnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH1dLAogICAgICBrZXlfcGhyYXNlczogW10sCiAgICAgIGlzQnVzeTogZmFsc2UsCiAgICAgIG9wZXJhdG9yOiAia2V5X3BocmFzZXMiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsncGxheWVyJ10pKSwKICBkZWFjdGl2YXRlZDogZnVuY3Rpb24gZGVhY3RpdmF0ZWQoKSB7CiAgICBjb25zb2xlLmxvZygnZGVhY3RpdmF0ZWQgY29tcG9uZW50OicsIHRoaXMub3BlcmF0b3IpOyAvLyBjbGVhcmluZyB0aGlzIHZhbHVlIGFmdGVyIGV2ZXJ5IGRlYWN0aXZhdGlvbiBzbyB3ZSBkb250IGNhcnJ5IHRoaXMgaHVnZSBhbW91bnQgb2YgZGF0YSBpbiBtZW1vcnkKCiAgICB0aGlzLmtleV9waHJhc2VzID0gW107CiAgfSwKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCdhY3RpdmF0ZWQgY29tcG9uZW50OicsIHRoaXMub3BlcmF0b3IpOwogICAgdGhpcy5mZXRjaEFzc2V0RGF0YSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMua2V5X3BocmFzZXMgPSBbXTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUNvbmZpZGVuY2U6IGZ1bmN0aW9uIHVwZGF0ZUNvbmZpZGVuY2UoZXZlbnQpIHsKICAgICAgdGhpcy5pc0J1c3kgPSB0cnVlOwogICAgICB0aGlzLmtleV9waHJhc2VzID0gW107CiAgICAgIHRoaXMuQ29uZmlkZW5jZSA9IGV2ZW50LnRhcmdldC52YWx1ZTsKICAgICAgdGhpcy5mZXRjaEFzc2V0RGF0YSgpOwogICAgfSwKICAgIGZldGNoQXNzZXREYXRhOiBmdW5jdGlvbiBmZXRjaEFzc2V0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHF1ZXJ5LCBhcGlOYW1lLCBwYXRoLCBhcGlQYXJhbXMsIHJlc3BvbnNlLCByZXN1bHQsIGRhdGEsIGksIGxlbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBxdWVyeSA9ICdBc3NldElkOicgKyBfdGhpcy4kcm91dGUucGFyYW1zLmFzc2V0X2lkICsgJyBDb25maWRlbmNlOj4nICsgX3RoaXMuQ29uZmlkZW5jZSArICcgX2luZGV4Om1pZWtleV9waHJhc2VzJzsKICAgICAgICAgICAgICAgIGFwaU5hbWUgPSAnY29udGVudEFuYWx5c2lzRWxhc3RpY3NlYXJjaCc7CiAgICAgICAgICAgICAgICBwYXRoID0gJy9fc2VhcmNoJzsKICAgICAgICAgICAgICAgIGFwaVBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ3EnOiBxdWVyeSwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdF9vcGVyYXRvcic6ICdBTkQnLAogICAgICAgICAgICAgICAgICAgICdzaXplJzogMTAwMDAKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRBbXBsaWZ5LkFQSS5nZXQoYXBpTmFtZSwgcGF0aCwgYXBpUGFyYW1zKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzLnNob3dFbGFzdGljU2VhcmNoQWxlcnQgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IHJlc3VsdC5oaXRzLmhpdHM7CgogICAgICAgICAgICAgICAgZm9yIChpID0gMCwgbGVuID0gZGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgICBfdGhpcy5rZXlfcGhyYXNlcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAiUGhyYXNlVGV4dCI6IGRhdGFbaV0uX3NvdXJjZS5QaHJhc2VUZXh0LAogICAgICAgICAgICAgICAgICAgICJDb25maWRlbmNlIjogZGF0YVtpXS5fc291cmNlLkNvbmZpZGVuY2UsCiAgICAgICAgICAgICAgICAgICAgIkJlZ2luT2Zmc2V0IjogZGF0YVtpXS5fc291cmNlLkJlZ2luT2Zmc2V0LAogICAgICAgICAgICAgICAgICAgICJFbmRPZmZzZXQiOiBkYXRhW2ldLl9zb3VyY2UuRW5kT2Zmc2V0CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzLmlzQnVzeSA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ComprehendKeyPhrases.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\">\n      Confidence Threshold<br>\n      <input\n        type=\"range\"\n        value=\"90\"\n        min=\"55\"\n        max=\"99\"\n        step=\"1\"\n        @click=\"updateConfidence\"\n      >\n      {{ Confidence }}%<br>\n    </div>\n    <div\n      v-if=\"isBusy\"\n      class=\"wrapper\"\n    >\n      <Loading />\n    </div>\n    <div\n      v-else\n      class=\"wrapper\"\n    >\n      <b-table\n        responsive\n        fixed\n        :items=\"key_phrases\"\n        :fields=\"fields\"\n        :sort-by=\"sortBy\"\n      >\n        <template #cell(Confidence)=\"data\">\n          {{ (data.item.Confidence * 1).toFixed(2) }}\n        </template>\n      </b-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Loading from '@/components/Loading.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: \"KeyPhrases\",\n  components: {\n    Loading\n  },\n  data() {\n    return {\n      Confidence: 90,\n      sortBy: \"BeginOffset\",\n      fields: [\n        { key: 'PhraseText', sortable: false },\n        { key: 'Confidence', sortable: true },\n        { key: 'BeginOffset', sortable: true },\n        { key: 'EndOffset', sortable: true },\n      ],\n      key_phrases: [],\n      isBusy: false,\n      operator: \"key_phrases\"\n    }\n  },\n  computed: {\n    ...mapState(['player']),\n  },\n  deactivated: function () {\n    console.log('deactivated component:', this.operator);\n    // clearing this value after every deactivation so we dont carry this huge amount of data in memory\n    this.key_phrases = []\n  },\n  activated: function () {\n    console.log('activated component:', this.operator);\n    this.fetchAssetData();\n  },\n  beforeDestroy: function () {\n    this.key_phrases = []\n  },\n  methods: {\n    updateConfidence (event) {\n        this.isBusy = true;\n        this.key_phrases = [];\n        this.Confidence = event.target.value;\n        this.fetchAssetData()\n    },\n    async fetchAssetData () {\n      let query = 'AssetId:'+this.$route.params.asset_id+' Confidence:>'+this.Confidence+' _index:miekey_phrases';\n      let apiName = 'contentAnalysisElasticsearch';\n      let path = '/_search';\n      let apiParams = {\n        headers: {'Content-Type': 'application/json'},\n        queryStringParameters: {'q': query, 'default_operator': 'AND', 'size': 10000}\n      };\n      let response = await this.$Amplify.API.get(apiName, path, apiParams);\n      if (!response) {\n        this.showElasticSearchAlert = true\n      }\n      else {\n        let result = await response;\n        let data = result.hits.hits;\n        for (let i = 0, len = data.length; i < len; i++) {\n          this.key_phrases.push({ \"PhraseText\": data[i]._source.PhraseText, \"Confidence\": data[i]._source.Confidence, \"BeginOffset\": data[i]._source.BeginOffset, \"EndOffset\": data[i]._source.EndOffset})\n        }\n        this.isBusy = false\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}