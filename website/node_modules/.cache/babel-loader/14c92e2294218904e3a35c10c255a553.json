{"remainingRequest":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendEntities.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ianwow/development/aws-content-analysis/source/website/src/components/ComprehendEntities.vue","mtime":1623875433270},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/babel-loader/lib/index.js","mtime":1633407348173},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/cache-loader/dist/cjs.js","mtime":1633407346687},{"path":"/Users/ianwow/development/aws-content-analysis/source/website/node_modules/vue-loader/lib/index.js","mtime":1633407348650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pYW53b3cvZGV2ZWxvcG1lbnQvYXdzLWNvbnRlbnQtYW5hbHlzaXMvc291cmNlL3dlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvaWFud293L2RldmVsb3BtZW50L2F3cy1jb250ZW50LWFuYWx5c2lzL3NvdXJjZS93ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTG9hZGluZyBmcm9tICdAL2NvbXBvbmVudHMvTG9hZGluZy52dWUnOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkVudGl0aWVzIiwKICBjb21wb25lbnRzOiB7CiAgICBMb2FkaW5nOiBMb2FkaW5nCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgQ29uZmlkZW5jZTogOTAsCiAgICAgIHNvcnRCeTogIkJlZ2luT2Zmc2V0IiwKICAgICAgZmllbGRzOiBbewogICAgICAgIGtleTogJ0VudGl0eVRleHQnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdFbnRpdHlUeXBlJywKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAnQ29uZmlkZW5jZScsCiAgICAgICAgc29ydGFibGU6IHRydWUKICAgICAgfSwgewogICAgICAgIGtleTogJ0JlZ2luT2Zmc2V0JywKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9LCB7CiAgICAgICAga2V5OiAnRW5kT2Zmc2V0JywKICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICB9XSwKICAgICAgZW50aXRpZXM6IFtdLAogICAgICBpc0J1c3k6IGZhbHNlLAogICAgICBvcGVyYXRvcjogImVudGl0aWVzIgogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ3BsYXllciddKSksCiAgZGVhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGRlYWN0aXZhdGVkKCkgewogICAgY29uc29sZS5sb2coJ2RlYWN0aXZhdGVkIGNvbXBvbmVudDonLCB0aGlzLm9wZXJhdG9yKTsgLy8gY2xlYXJpbmcgdGhpcyB2YWx1ZSBhZnRlciBldmVyeSBkZWFjdGl2YXRpb24gc28gd2UgZG9udCBjYXJyeSB0aGlzIGh1Z2UgYW1vdW50IG9mIGRhdGEgaW4gbWVtb3J5CgogICAgdGhpcy5lbnRpdGllcyA9IFtdOwogIH0sCiAgYWN0aXZhdGVkOiBmdW5jdGlvbiBhY3RpdmF0ZWQoKSB7CiAgICBjb25zb2xlLmxvZygnYWN0aXZhdGVkIGNvbXBvbmVudDonLCB0aGlzLm9wZXJhdG9yKTsKICAgIHRoaXMuZmV0Y2hBc3NldERhdGEoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLmVudGl0aWVzID0gW107CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVDb25maWRlbmNlOiBmdW5jdGlvbiB1cGRhdGVDb25maWRlbmNlKGV2ZW50KSB7CiAgICAgIHRoaXMuaXNCdXN5ID0gdHJ1ZTsKICAgICAgdGhpcy5lbnRpdGllcyA9IFtdOwogICAgICB0aGlzLkNvbmZpZGVuY2UgPSBldmVudC50YXJnZXQudmFsdWU7CiAgICAgIHRoaXMuZmV0Y2hBc3NldERhdGEoKTsKICAgIH0sCiAgICBmZXRjaEFzc2V0RGF0YTogZnVuY3Rpb24gZmV0Y2hBc3NldERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBxdWVyeSwgYXBpTmFtZSwgcGF0aCwgYXBpUGFyYW1zLCByZXNwb25zZSwgcmVzdWx0LCBkYXRhLCBpLCBsZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcXVlcnkgPSAnQXNzZXRJZDonICsgX3RoaXMuJHJvdXRlLnBhcmFtcy5hc3NldF9pZCArICcgQ29uZmlkZW5jZTo+JyArIF90aGlzLkNvbmZpZGVuY2UgKyAnIF9pbmRleDptaWVlbnRpdGllcyc7CiAgICAgICAgICAgICAgICBhcGlOYW1lID0gJ2NvbnRlbnRBbmFseXNpc0VsYXN0aWNzZWFyY2gnOwogICAgICAgICAgICAgICAgcGF0aCA9ICcvX3NlYXJjaCc7CiAgICAgICAgICAgICAgICBhcGlQYXJhbXMgPSB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHF1ZXJ5U3RyaW5nUGFyYW1ldGVyczogewogICAgICAgICAgICAgICAgICAgICdxJzogcXVlcnksCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHRfb3BlcmF0b3InOiAnQU5EJywKICAgICAgICAgICAgICAgICAgICAnc2l6ZSc6IDEwMDAwCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kQW1wbGlmeS5BUEkuZ2V0KGFwaU5hbWUsIHBhdGgsIGFwaVBhcmFtcyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5zaG93RWxhc3RpY1NlYXJjaEFsZXJ0ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSByZXN1bHQuaGl0cy5oaXRzOwoKICAgICAgICAgICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IGRhdGEubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuZW50aXRpZXMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgIkVudGl0eVRleHQiOiBkYXRhW2ldLl9zb3VyY2UuRW50aXR5VGV4dCwKICAgICAgICAgICAgICAgICAgICAiRW50aXR5VHlwZSI6IGRhdGFbaV0uX3NvdXJjZS5FbnRpdHlUeXBlLAogICAgICAgICAgICAgICAgICAgICJDb25maWRlbmNlIjogZGF0YVtpXS5fc291cmNlLkNvbmZpZGVuY2UsCiAgICAgICAgICAgICAgICAgICAgIkJlZ2luT2Zmc2V0IjogZGF0YVtpXS5fc291cmNlLkJlZ2luT2Zmc2V0LAogICAgICAgICAgICAgICAgICAgICJFbmRPZmZzZXQiOiBkYXRhW2ldLl9zb3VyY2UuRW5kT2Zmc2V0CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzLmlzQnVzeSA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ComprehendEntities.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"wrapper\">\n      Confidence Threshold<br>\n      <input\n        type=\"range\"\n        value=\"90\"\n        min=\"55\"\n        max=\"99\"\n        step=\"1\"\n        @click=\"updateConfidence\"\n      >\n      {{ Confidence }}%<br>\n    </div>\n    <div\n      v-if=\"isBusy\"\n      class=\"wrapper\"\n    >\n      <Loading />\n    </div>\n    <div class=\"wrapper\">\n      <b-table\n        responsive\n        fixed\n        :items=\"entities\"\n        :fields=\"fields\"\n        :sort-by=\"sortBy\"\n      >\n        <template #cell(Confidence)=\"data\">\n          {{ (data.item.Confidence * 1).toFixed(2) }}\n        </template>\n      </b-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Loading from '@/components/Loading.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: \"Entities\",\n  components: {\n    Loading\n    },\n  data() {\n    return {\n      Confidence: 90,\n      sortBy: \"BeginOffset\",\n      fields: [\n        { key: 'EntityText', sortable: true },\n        { key: 'EntityType', sortable: true },\n        { key: 'Confidence', sortable: true },\n        { key: 'BeginOffset', sortable: true },\n        { key: 'EndOffset', sortable: true },\n      ],\n      entities: [],\n      isBusy: false,\n      operator: \"entities\"\n    }\n  },\n  computed: {\n    ...mapState(['player']),\n  },\n  deactivated: function () {\n    console.log('deactivated component:', this.operator)\n    // clearing this value after every deactivation so we dont carry this huge amount of data in memory\n    this.entities = []\n  },\n  activated: function () {\n    console.log('activated component:', this.operator);\n    this.fetchAssetData();\n  },\n  beforeDestroy: function () {\n    this.entities = []\n  },\n  methods: {\n    updateConfidence (event) {\n      this.isBusy = true;\n      this.entities = [];\n      this.Confidence = event.target.value;\n      this.fetchAssetData()\n    },\n    async fetchAssetData () {\n      let query = 'AssetId:'+this.$route.params.asset_id+' Confidence:>'+this.Confidence+' _index:mieentities';\n      let apiName = 'contentAnalysisElasticsearch';\n      let path = '/_search';\n      let apiParams = {\n        headers: {'Content-Type': 'application/json'},\n        queryStringParameters: {'q': query, 'default_operator': 'AND', 'size': 10000}\n      };\n      let response = await this.$Amplify.API.get(apiName, path, apiParams);\n      if (!response) {\n        this.showElasticSearchAlert = true\n      }\n      else {\n        let result = await response;\n        let data = result.hits.hits;\n        for (var i = 0, len = data.length; i < len; i++) {\n          this.entities.push({ \"EntityText\": data[i]._source.EntityText, \"EntityType\": data[i]._source.EntityType, \"Confidence\": data[i]._source.Confidence, \"BeginOffset\": data[i]._source.BeginOffset, \"EndOffset\": data[i]._source.EndOffset})\n        }\n        this.isBusy = false\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}